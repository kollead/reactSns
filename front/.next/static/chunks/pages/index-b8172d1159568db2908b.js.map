{"version":3,"sources":["webpack://_N_E/./component/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js"],"names":["PostForm","dispatch","useDispatch","useInput","text","onChangeText","SetText","useSelector","state","post","imagePaths","addPostDone","imageInput","useRef","useEffect","onSubmit","useCallback","trim","alert","formData","FormData","forEach","p","append","type","ADD_POST_REQUEST","data","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","UPLOAD_IMAGES_REQUEST","imageOnClick","index","REMOVE_IMAGE","style","margin","encType","onFinish","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","map","v","i","display","onKeyDown","role","src","width","alt","Home","user","mainPosts","hasMorePost","loadPostsLoading","retweetError","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","AppLayout","PostCard","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/index-b8172d1159568db2908b.js","sourcesContent":["import React, {useCallback, useRef, useEffect} from 'react';\r\nimport Form from 'antd/lib/form';\r\nimport Input from 'antd/lib/input';\r\nimport Button from 'antd/lib/button';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST} from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nfunction PostForm() {\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText, SetText] = useInput();\r\n  const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n  const imageInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      SetText('');\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(\r\n    () => {\r\n      if (!text || !text.trim()) {\r\n        return alert('게시글을 작성하세요');\r\n      }\r\n      const formData = new FormData();\r\n      imagePaths.forEach((p) => {\r\n        formData.append('image', p);\r\n      });\r\n      formData.append('content', text);\r\n      return dispatch({\r\n        type: ADD_POST_REQUEST,\r\n        data: formData,\r\n      });\r\n    },\r\n    [text, imagePaths],\r\n  );\r\n  const onClickImageUpload = useCallback(\r\n    () => {\r\n      imageInput.current.click();\r\n    },\r\n    [imageInput.current],\r\n  );\r\n\r\n  const onChangeImages = useCallback(\r\n    (e) => {\r\n      console.log('images', e.target.files);\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, (f) => {\r\n        imageFormData.append('image', f);\r\n      });\r\n      dispatch({\r\n        type: UPLOAD_IMAGES_REQUEST,\r\n        data: imageFormData,\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const imageOnClick = useCallback(\r\n    (index) => () => {\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: index,\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"Share your story\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n        <Button onClick={onClickImageUpload}>Image Upload</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{float: 'right'}}\r\n          htmlType=\"submit\"\r\n        >\r\n          Twit\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths && imagePaths.map((v, i) => (\r\n          <div key={v} style={{display: 'inline-block'}} onClick={imageOnClick(i)} onKeyDown={imageOnClick(i)} role=\"presentation\">\r\n            <img\r\n              src={`http://localhost:3065/${v}`}\r\n              style={{width: '200px'}}\r\n              alt={v}\r\n            />\r\n            <div><Button>Remove</Button></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default PostForm;\r\n","import React, {useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport wrapper from '../store/configureStore';\r\nimport AppLayout from '../component/AppLayout';\r\nimport PostForm from '../component/PostForm';\r\nimport PostCard from '../component/PostCard';\r\nimport {LOAD_POSTS_REQUEST} from '../reducers/post';\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\n\r\nconst Home = () => {\r\n  const {user} = useSelector((state) => state.user);\r\n  const {mainPosts, hasMorePost, loadPostsLoading,\r\n    retweetError} = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          console.log('lastId: ', lastId);\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {user && <PostForm />}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  "],"sourceRoot":""}