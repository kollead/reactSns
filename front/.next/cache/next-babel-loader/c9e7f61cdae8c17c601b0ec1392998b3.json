{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\component\\\\PostForm.js\";\nimport React, { useCallback, useState, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  const dispatch = useDispatch();\n  const {\n    0: text,\n    1: SetText\n  } = useState(\"\");\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n    SetText('');\n  }, []);\n  const onChangeText = useCallback(e => {\n    SetText(e.target.value);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"Share your story\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"Image Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"Twit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths && imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: v,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/PostForm.js"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useDispatch","useSelector","addPost","PostForm","dispatch","text","SetText","imagePaths","state","post","imageInput","onSubmit","onChangeText","e","target","value","onClickImageUpload","current","click","margin","float","map","v","display","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAmD,OAAnD;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;;AACA,SAASC,QAAT,GAAoB;AAEhB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAmBX,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAACY,IAAAA;AAAD,MAAeN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAhC;AACA,QAAMC,UAAU,GAAGd,MAAM,EAAzB;AAEA,QAAMe,QAAQ,GAAGjB,WAAW,CACxB,MAAM;AACFU,IAAAA,QAAQ,CAACF,OAAO,CAACG,IAAD,CAAR,CAAR;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAJuB,EAKxB,EALwB,CAA5B;AAOA,QAAMM,YAAY,GAAElB,WAAW,CAC1BmB,CAAD,IAAO;AACLP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAH0B,EAI3B,EAJ2B,CAA/B;AAMA,QAAMC,kBAAkB,GAAGtB,WAAW,CAClC,MAAM;AACFgB,IAAAA,UAAU,CAACO,OAAX,CAAmBC,KAAnB;AACH,GAHiC,EAIlC,CAACR,UAAU,CAACO,OAAZ,CAJkC,CAAtC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAsC,IAAA,OAAO,EAAC,qBAA9C;AAAoE,IAAA,QAAQ,EAAER,QAA9E;AAAA,4BACI,QAAC,KAAD,CAAO,QAAP;AACC,MAAA,KAAK,EAAEN,IADR;AAEC,MAAA,QAAQ,EAAEO,YAFX;AAGC,MAAA,SAAS,EAAE,GAHZ;AAIC,MAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,MAAM,MAAlC;AAAmC,QAAA,GAAG,EAAEF;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEM,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,KAAK,EAAE;AAACI,UAAAA,KAAK,EAAE;AAAR,SAFR;AAGC,QAAA,QAAQ,EAAC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAcI;AAAA,gBACKb,UAAU,IAAEA,UAAU,CAACc,GAAX,CAAgBC,CAAD,iBACxB;AAAa,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAE;AAAV,SAApB;AAAA,gCACI;AAAK,UAAA,GAAG,EAAED,CAAV;AAAa,UAAA,KAAK,EAAE;AAACE,YAAAA,KAAK,EAAE;AAAR,WAApB;AAAsC,UAAA,GAAG,EAAEF;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cADS;AADjB;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;AAED,eAAenB,QAAf","sourcesContent":["import React, {useCallback, useState, useRef} from 'react'\r\nimport {Form, Input, Button} from 'antd'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {addPost} from '../reducers/post'\r\nfunction PostForm() {\r\n\r\n    const dispatch = useDispatch()\r\n    const [text, SetText] =  useState(\"\")\r\n    const {imagePaths} = useSelector(state => state.post)\r\n    const imageInput = useRef()\r\n\r\n    const onSubmit = useCallback(\r\n        () => {\r\n            dispatch(addPost(text))\r\n            SetText('')\r\n        },\r\n        [],\r\n    )\r\n    const onChangeText =useCallback(\r\n        (e) => {\r\n          SetText(e.target.value)  \r\n        },\r\n        [],\r\n    )\r\n    const onClickImageUpload = useCallback(\r\n        () => {\r\n            imageInput.current.click()   \r\n        },\r\n        [imageInput.current],\r\n    )\r\n\r\n    return (\r\n        <Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea \r\n             value={text}\r\n             onChange={onChangeText}\r\n             maxLength={140}\r\n             placeholder=\"Share your story\"/>\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>Image Upload</Button>\r\n                <Button \r\n                 type=\"primary\" \r\n                 style={{float: 'right'}}\r\n                 htmlType=\"submit\">Twit</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths&&imagePaths.map((v)=>(\r\n                    <div key={v} style={{display: 'inline-block'}}>\r\n                        <img src={v} style={{width: '200px'}} alt={v}/>\r\n                        <div><Button>Remove</Button></div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm\r\n"]},"metadata":{},"sourceType":"module"}