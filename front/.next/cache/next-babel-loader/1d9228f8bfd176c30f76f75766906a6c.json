{"ast":null,"code":"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { END } from 'redux-saga';\nimport wrapper from '../store/configureStore';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from '../component/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst Home = () => {\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          console.log('lastId: ', lastId);\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [user && /*#__PURE__*/_jsx(PostForm, {}), mainPosts.map(post => /*#__PURE__*/_jsx(PostCard, {\n      post: post\n    }, post.id))]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/index.js"],"names":["React","useEffect","axios","useSelector","useDispatch","END","wrapper","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","Home","user","state","mainPosts","hasMorePost","loadPostsLoading","retweetError","post","dispatch","alert","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","console","log","type","addEventListener","removeEventListener","map","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {END} from 'redux-saga';\r\nimport wrapper from '../store/configureStore';\r\nimport AppLayout from '../component/AppLayout';\r\nimport PostForm from '../component/PostForm';\r\nimport PostCard from '../component/PostCard';\r\nimport {LOAD_POSTS_REQUEST} from '../reducers/post';\r\nimport {LOAD_MY_INFO_REQUEST} from '../reducers/user';\r\n\r\nconst Home = () => {\r\n  const {user} = useSelector((state) => state.user);\r\n  const {mainPosts, hasMorePost, loadPostsLoading,\r\n    retweetError} = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          console.log('lastId: ', lastId);\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {user && <PostForm />}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}