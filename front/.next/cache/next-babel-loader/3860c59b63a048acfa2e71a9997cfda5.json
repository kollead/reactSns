{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\component\\\\PostCardContent.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Button, Input } from 'antd';\nimport { useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nfunction PostCardContent({\n  postData,\n  editMode,\n  onModifyPost,\n  onClickModify\n}) {\n  const {\n    modifyPostLoading,\n    modifyPostDone\n  } = useSelector(state => state.post);\n  const [editText, onChangeText, setEditText] = useInput(postData);\n  useEffect(() => {\n    if (modifyPostDone) {\n      onClickModify();\n    }\n  }, [modifyPostDone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: editText,\n        onChange: onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          loading: modifyPostLoading,\n          onClick: onModifyPost(editText),\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          onClick: onClickModify,\n          children: \"\\uC218\\uC815 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : postData.split(/(#[^\\s#]+)/g).map(v => {\n      if (v.match(/(#[^\\s#]+)/)) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: `/hashtag/${v.slice(1)}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 66\n          }, this)\n        }, v, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 20\n        }, this);\n      }\n\n      return v;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onModifyPost: PropTypes.func.isRequired,\n  onClickModify: PropTypes.func.isRequired\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/PostCardContent.js"],"names":["React","useState","useCallback","useEffect","Link","PropTypes","Button","Input","useSelector","useInput","TextArea","PostCardContent","postData","editMode","onModifyPost","onClickModify","modifyPostLoading","modifyPostDone","state","post","editText","onChangeText","setEditText","split","map","v","match","slice","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,MAA5B;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAaH,KAAnB;;AAEA,SAASI,eAAT,CAAyB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA,YAArB;AAAmCC,EAAAA;AAAnC,CAAzB,EAA4E;AAC1E,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAAwCT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzD;AACA,QAAM,CAACC,QAAD,EAAWC,YAAX,EAAyBC,WAAzB,IAAwCb,QAAQ,CAACG,QAAD,CAAtD;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,cAAJ,EAAoB;AAClBF,MAAAA,aAAa;AACd;AACF,GAJQ,EAIN,CAACE,cAAD,CAJM,CAAT;AAMA,sBACE;AAAA,cACGJ,QAAQ,gBAEL;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEO,QAAjB;AAA2B,QAAA,QAAQ,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,KAAR;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEL,iBAAjB;AAAoC,UAAA,OAAO,EAAEF,YAAY,CAACM,QAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEL,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFK,GAULH,QAAQ,CAACW,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAmCC,CAAD,IAAO;AACzC,UAAIA,CAAC,CAACC,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACzB,4BAAO,QAAC,IAAD;AAAc,UAAA,IAAI,EAAG,YAAWD,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAW,EAA3C;AAAA,iCAA8C;AAAA,sBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA9C,WAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,aAAOA,CAAP;AACD,KALC;AAXN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;AAEDd,eAAe,CAACiB,SAAhB,GAA4B;AAC1BhB,EAAAA,QAAQ,EAAEP,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAE1BjB,EAAAA,QAAQ,EAAER,SAAS,CAAC0B,IAFM;AAG1BjB,EAAAA,YAAY,EAAET,SAAS,CAAC2B,IAAV,CAAeF,UAHH;AAI1Bf,EAAAA,aAAa,EAAEV,SAAS,CAAC2B,IAAV,CAAeF;AAJJ,CAA5B;AAOAnB,eAAe,CAACsB,YAAhB,GAA+B;AAC7BpB,EAAAA,QAAQ,EAAE;AADmB,CAA/B;AAIA,eAAeF,eAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport {Button, Input} from 'antd';\r\nimport { useSelector} from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst {TextArea} = Input;\r\n\r\nfunction PostCardContent({postData, editMode, onModifyPost, onClickModify}) {\r\n  const { modifyPostLoading, modifyPostDone } = useSelector((state) => state.post);\r\n  const [editText, onChangeText, setEditText] = useInput(postData);\r\n  useEffect(() => {\r\n    if (modifyPostDone) {\r\n      onClickModify();\r\n    }\r\n  }, [modifyPostDone]);\r\n\r\n  return (\r\n    <div>\r\n      {editMode\r\n        ? (\r\n          <>\r\n            <TextArea value={editText} onChange={onChangeText} />\r\n            <Button.Group>\r\n              <Button loading={modifyPostLoading} onClick={onModifyPost(editText)}>수정</Button>\r\n              <Button type=\"danger\" onClick={onClickModify}>수정 취소</Button>\r\n            </Button.Group>\r\n          </>\r\n        )\r\n        : postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n          if (v.match(/(#[^\\s#]+)/)) {\r\n            return <Link key={v} href={`/hashtag/${v.slice(1)}`}><a>{v}</a></Link>;\r\n          }\r\n          return v;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nPostCardContent.propTypes = {\r\n  postData: PropTypes.string.isRequired,\r\n  editMode: PropTypes.bool,\r\n  onModifyPost: PropTypes.func.isRequired,\r\n  onClickModify: PropTypes.func.isRequired,\r\n};\r\n\r\nPostCardContent.defaultProps = {\r\n  editMode: false,\r\n};\r\n\r\nexport default PostCardContent;\r\n"]},"metadata":{},"sourceType":"module"}