{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\component\\\\CommentForm.js\";\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useInput';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm({\n  post\n}) {\n  const [commentText, onChangeCommentText] = useInput;\n  const id = useSelector(state => {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Twit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/CommentForm.js"],"names":["React","useCallback","Form","Input","Button","PropTypes","useInput","useSelector","CommentForm","post","commentText","onChangeCommentText","id","state","user","onSubmitComment","console","log","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,WAAT,CAAqB;AAACC,EAAAA;AAAD,CAArB,EAA6B;AACzB,QAAM,CAACC,WAAD,EAAcC,mBAAd,IAAqCL,QAA3C;AACA,QAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAD;AAAA;;AAAA,+BAASA,KAAK,CAACC,IAAN,CAAWA,IAApB,qDAAS,iBAAiBF,EAA1B;AAAA,GAAD,CAAtB;AACA,QAAMG,eAAe,GAAGd,WAAW,CAC/B,MAAM;AACFe,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACG,EAAjB,EAAqBF,WAArB;AACH,GAH8B,EAI/B,CAACA,WAAD,CAJ+B,CAAnC;AAOA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAACG,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAlB;AAAA,8BACA,QAAC,KAAD,CAAO,QAAP;AACC,QAAA,KAAK,EAAET,WADR;AAEC,QAAA,QAAQ,EAAEC,mBAFX;AAGC,QAAA,IAAI,EAAE;AAHP;AAAA;AAAA;AAAA;AAAA,cADA,eAKA,QAAC,MAAD;AACC,QAAA,KAAK,EAAE;AAACO,UAAAA,QAAQ,EAAE,UAAX;AAAuBE,UAAAA,KAAK,EAAE,CAA9B;AAAiCC,UAAAA,MAAM,EAAE,CAAC;AAA1C,SADR;AAEC,QAAA,IAAI,EAAC,SAFN;AAEgB,QAAA,QAAQ,EAAC,QAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;AAEDb,WAAW,CAACc,SAAZ,GAAsB;AAClBb,EAAAA,IAAI,EAAEJ,SAAS,CAACkB,MAAV,CAAiBC;AADL,CAAtB;AAIA,eAAehB,WAAf","sourcesContent":["import React, {useCallback} from 'react'\r\nimport {Form, Input, Button} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport useInput from '../hooks/useInput'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction CommentForm({post}) {\r\n    const [commentText, onChangeCommentText] = useInput\r\n    const id = useSelector((state)=>state.user.user?.id)\r\n    const onSubmitComment = useCallback(\r\n        () => {\r\n            console.log(post.id, commentText)\r\n        },\r\n        [commentText],\r\n    );\r\n    \r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position: 'relative', margin: 0}}>\r\n            <Input.TextArea \r\n             value={commentText}\r\n             onChange={onChangeCommentText}\r\n             rows={4}/>\r\n            <Button\r\n             style={{position: 'absolute', right: 0, bottom: -40}} \r\n             type=\"primary\" htmlType=\"submit\">\r\n                Twit\r\n            </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.propTypes={\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default CommentForm\r\n"]},"metadata":{},"sourceType":"module"}