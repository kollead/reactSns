{"ast":null,"code":"import { all, fork, takeLatest, put, call, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`, {\n    withCredentials: true\n  });\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}}/comment`, data);\n}\n\nfunction removeCommentAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}}/like`);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}}/like`);\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchRetweet), fork(watchLoadPost)]);\n}","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/sagas/post.js"],"names":["all","fork","takeLatest","put","call","throttle","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_REQUEST","UNLIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_SUCCESS","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadPostAPI","data","withCredentials","addPostAPI","post","addCommentAPI","postId","removeCommentAPI","unlikePostAPI","delete","likePostAPI","patch","removePostAPI","uploadImagesAPI","retweetAPI","addPost","action","result","type","id","error","response","addComment","removePost","loadPosts","loadPost","unlikePost","likePost","uploadImages","retweet","watchAddPost","watchAddComment","watchRemovePost","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","watchRetweet","watchLoadPost","postSaga"],"mappings":"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","sourcesContent":["import {all, fork, takeLatest, put, call, throttle } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS,\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,\r\n  LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS,\r\n  UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME} from '../reducers/user';\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`, {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data);\r\n}\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}}/comment`, data);\r\n}\r\nfunction removeCommentAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}}/like`);\r\n}\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}}/like`);\r\n}\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data);\r\n}\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.lastId);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchUploadImages),\r\n    fork(watchRetweet),\r\n    fork(watchLoadPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}