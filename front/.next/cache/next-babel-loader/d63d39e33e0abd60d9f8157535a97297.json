{"ast":null,"code":"import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { Card, Avatar } from 'antd';\nimport AppLayout from '../component/AppLayout';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar About = function About() {\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"About | NodeBird\"\n      })\n    }), userInfo ? /*#__PURE__*/_jsx(Card, {\n      actions: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"br\", {}), userInfo.Posts.length]\n      }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"br\", {}), userInfo.Following.length]\n      }, \"following\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"br\", {}), userInfo.Follower.length]\n      }, \"follower\")],\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        avatar: /*#__PURE__*/_jsx(Avatar, {\n          children: userInfo.nickname[0]\n        }),\n        title: userInfo.nickname,\n        description: \"sns\"\n      })\n    }) : null]\n  });\n};\n\nexport var __N_SSG = true;\nexport default About;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/about.js"],"names":["React","useSelector","Head","Card","Avatar","AppLayout","About","state","user","userInfo","Posts","length","Following","Follower","nickname"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,qBACCL,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADZ;AAAA,MACXC,QADW,gBACXA,QADW;;AAGlB,sBACE,MAAC,SAAD;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF,EAIGA,QAAQ,gBAEL,KAAC,IAAD;AACE,MAAA,OAAO,EAAE,cACP;AAAA,gCACE,cADF,EAEGA,QAAQ,CAACC,KAAT,CAAeC,MAFlB;AAAA,SAAS,MAAT,CADO,eAKP;AAAA,gCACE,cADF,EAEGF,QAAQ,CAACG,SAAT,CAAmBD,MAFtB;AAAA,SAAS,WAAT,CALO,eASP;AAAA,gCACE,cADF,EAEGF,QAAQ,CAACI,QAAT,CAAkBF,MAFrB;AAAA,SAAS,UAAT,CATO,CADX;AAAA,6BAgBE,KAAC,IAAD,CAAM,IAAN;AACE,QAAA,MAAM,eAAE,KAAC,MAAD;AAAA,oBAASF,QAAQ,CAACK,QAAT,CAAkB,CAAlB;AAAT,UADV;AAEE,QAAA,KAAK,EAAEL,QAAQ,CAACK,QAFlB;AAGE,QAAA,WAAW,EAAC;AAHd;AAhBF,MAFK,GAyBL,IA7BN;AAAA,IADF;AAkCD,CArCD;;;AAgDA,eAAeR,KAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport { END } from 'redux-saga';\r\nimport { Card, Avatar } from 'antd';\r\nimport AppLayout from '../component/AppLayout';\r\nimport {LOAD_USER_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst About = () => {\r\n  const {userInfo} = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>About | NodeBird</title>\r\n      </Head>\r\n      {userInfo\r\n        ? (\r\n          <Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                <br />\r\n                {userInfo.Posts.length}\r\n              </div>,\r\n              <div key=\"following\">\r\n                <br />\r\n                {userInfo.Following.length}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                <br />\r\n                {userInfo.Follower.length}\r\n              </div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              title={userInfo.nickname}\r\n              description=\"sns\"\r\n            />\r\n          </Card>\r\n        )\r\n        : null }\r\n    </AppLayout>\r\n\r\n  );\r\n};\r\n\r\nexport const getStaticProps = wrapper.getStaticProps(async (context) => {\r\n  context.store.dispatch({\r\n    type: LOAD_USER_INFO_REQUEST,\r\n    data: 1,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default About;\r\n"]},"metadata":{},"sourceType":"module"}