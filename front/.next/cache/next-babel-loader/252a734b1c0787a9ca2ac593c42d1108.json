{"ast":null,"code":"import shortid from 'shortid';\nimport produce from 'immer';\nimport faker from 'faker';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePost: true,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortid.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport var LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport var LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var removePost = function removePost(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = {...state.mainPosts[postIndex]};\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostsLoading = true;\n        draft.likePostsDone = false;\n        draft.likePostsError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers.push({\n            id: action.data.UserId\n          });\n\n          draft.likePostsLoading = false;\n          draft.likePostsDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostsLoading = false;\n        draft.likePostsError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostsLoading = true;\n        draft.unlikePostsDone = false;\n        draft.unlikePostsError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Likers = _post2.Likers.filter(function (v) {\n            return v.id === action.data.UserId;\n          });\n          draft.unlikePostsLoading = false;\n          draft.unlikePostsDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostsLoading = false;\n        draft.unlikePostsError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/reducers/post.js"],"names":["shortid","produce","faker","initialState","mainPosts","imagePaths","hasMorePost","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","loadPostsLoading","loadPostsDone","loadPostsError","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","data","type","addComment","removePost","reducer","state","action","draft","concat","length","error","unshift","post","find","v","PostId","filter","likePostsLoading","likePostsDone","likePostsError","Likers","push","UserId","unlikePostsLoading","unlikePostsDone","unlikePostsError"],"mappings":"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","sourcesContent":["import shortid from 'shortid';\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePost: true,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n};\r\n\r\nexport const generateDummyPost = (number) => Array(number).fill().map(() => ({\r\n  id: shortid.generate(),\r\n  User: {\r\n    id: shortid.generate(),\r\n    nickname: faker.name.findName(),\r\n  },\r\n  content: faker.lorem.paragraph(),\r\n  Images: [{\r\n    src: faker.image.image(),\r\n  }],\r\n  Comments: [{\r\n    User: {\r\n      id: shortid.generate(),\r\n      nickname: faker.name.findName(),\r\n    },\r\n    content: faker.lorem.sentence(),\r\n  }],\r\n}));\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST, data,\r\n});\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST, data,\r\n});\r\nexport const removePost = (data) => ({\r\n  type: REMOVE_POST_REQUEST, data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case LOAD_POSTS_REQUEST:\r\n      draft.loadPostsLoading = true;\r\n      draft.loadPostsDone = false;\r\n      draft.loadPostsError = null;\r\n      break;\r\n    case LOAD_POSTS_SUCCESS:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsDone = true;\r\n      draft.mainPosts = action.data.concat(draft.mainPosts);\r\n      draft.hasMorePost = draft.mainPosts.length < 50;\r\n      break;\r\n    case LOAD_POSTS_FAILURE:\r\n      draft.loadPostsLoading = false;\r\n      draft.loadPostsError = action.error;\r\n      break;\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(action.data);\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Comments.unshift(action.data);\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n      // const post = {...state.mainPosts[postIndex]};\r\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      // const mainPosts = [...state.mainPosts];\r\n      // mainPosts[postIndex] = post;\r\n      // return {\r\n      //   ...state,\r\n      //   mainPosts,\r\n      //   addCommentLoading: false,\r\n      //   addCommentDone: true,\r\n      // };\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data.PostId);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    case LIKE_POST_REQUEST:\r\n      draft.likePostsLoading = true;\r\n      draft.likePostsDone = false;\r\n      draft.likePostsError = null;\r\n      break;\r\n    case LIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers.push({id: action.data.UserId});\r\n      draft.likePostsLoading = false;\r\n      draft.likePostsDone = true;\r\n      break;\r\n    }\r\n    case LIKE_POST_FAILURE:\r\n      draft.likePostsLoading = false;\r\n      draft.likePostsError = action.error;\r\n      break;\r\n    case UNLIKE_POST_REQUEST:\r\n      draft.unlikePostsLoading = true;\r\n      draft.unlikePostsDone = false;\r\n      draft.unlikePostsError = null;\r\n      break;\r\n    case UNLIKE_POST_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n      post.Likers = post.Likers.filter((v) => v.id === action.data.UserId);\r\n      draft.unlikePostsLoading = false;\r\n      draft.unlikePostsDone = true;\r\n      break;\r\n    }\r\n    case UNLIKE_POST_FAILURE:\r\n      draft.unlikePostsLoading = false;\r\n      draft.unlikePostsError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}