{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unlikePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnlikePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { all, fork, takeLatest, put, call, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostAPI(data) {\n  return axios.get('/posts', data);\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"}/comment\"), data);\n}\n\nfunction removeCommentAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction unlikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"}/like\"));\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"}/like\"));\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: ADD_POST_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 12;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 12;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction unlikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unlikePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unlikePostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: LIKE_POST_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchUnlikePost() {\n  return _regeneratorRuntime.wrap(function watchUnlikePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost)]);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/sagas/post.js"],"names":["addPost","addComment","removePost","loadPosts","unlikePost","likePost","watchAddPost","watchAddComment","watchRemovePost","watchLoadPosts","watchLikePost","watchUnlikePost","postSaga","all","fork","takeLatest","put","call","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_REQUEST","UNLIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostAPI","data","get","addPostAPI","post","content","addCommentAPI","postId","removeCommentAPI","unlikePostAPI","likePostAPI","patch","removePostAPI","action","result","type","id","response"],"mappings":"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","sourcesContent":["import {all, fork, takeLatest, put, call, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS,\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,\r\n  LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS,\r\n  UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME} from '../reducers/user';\r\n\r\nfunction loadPostAPI(data) {\r\n  return axios.get('/posts', data);\r\n}\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', {content: data});\r\n}\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}}/comment`, data);\r\n}\r\nfunction removeCommentAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}}/like`);\r\n}\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}}/like`);\r\n}\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      data: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLoadPosts() {\r\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}