{"ast":null,"code":"// user/[id].js\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { Card, Avatar } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../component/AppLayout';\nimport PostCard from '../../component/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar User = function User() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo,\n      user = _useSelector2.user;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          console.log('lastId: ', lastId);\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: lastId,\n            data: id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, id, mainPosts.length]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:title\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: \"http://nodebird.com/favicon.ico\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: \"https://nodebird.com/pot.\".concat(id)\n      })]\n    }), userInfo && userInfo.id !== (user === null || user === void 0 ? void 0 : user.id) ? /*#__PURE__*/_jsx(Card, {\n      style: {\n        marginBottom: 20\n      },\n      actions: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Twit\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Posts]\n      }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Following\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Following]\n      }, \"followings\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Follower\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Follower]\n      }, \"followers\")],\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        title: userInfo.nickname,\n        avatar: /*#__PURE__*/_jsx(Link, {\n          href: \"/user/\".concat(userInfo.id),\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: /*#__PURE__*/_jsx(Avatar, {\n              children: userInfo.nickname[0]\n            })\n          })\n        })\n      })\n    }) : null, \";\", mainPosts.map(function (p) {\n      return /*#__PURE__*/_jsx(PostCard, {\n        post: p\n      }, p.id);\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default User;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/user/[id].js"],"names":["React","useEffect","useSelector","useDispatch","useRouter","Link","Head","Card","Avatar","LOAD_USER_POSTS_REQUEST","AppLayout","PostCard","User","router","dispatch","id","query","state","post","mainPosts","hasMorePost","loadPostsLoading","user","userInfo","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","addEventListener","removeEventListener","nickname","marginBottom","Posts","Following","Follower","map","p"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,MAA7B;AAGA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,MAAMU,QAAQ,GAAGX,WAAW,EAA5B;AAFiB,MAGVY,EAHU,GAGJF,MAAM,CAACG,KAHH,CAGVD,EAHU;;AAAA,qBAIkCb,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAJ7C;AAAA,MAIVC,SAJU,gBAIVA,SAJU;AAAA,MAICC,WAJD,gBAICA,WAJD;AAAA,MAIcC,gBAJd,gBAIcA,gBAJd;;AAAA,sBAKQnB,WAAW,CAAC,UAACe,KAAD;AAAA,WAAWA,KAAK,CAACK,IAAjB;AAAA,GAAD,CALnB;AAAA,MAKVC,QALU,iBAKVA,QALU;AAAA,MAKAD,IALA,iBAKAA,IALA;;AAOjBrB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASuB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAD5C,EACiD;AAC/C,YAAIV,WAAW,IAAI,CAACC,gBAApB,EAAsC;AAAA;;AACpC,cAAMU,MAAM,iBAAGZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCjB,EAAhD;AACAkB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,MAAxB;AACAjB,UAAAA,QAAQ,CAAC;AACPqB,YAAAA,IAAI,EAAE1B,uBADC;AAEPsB,YAAAA,MAAM,EAANA,MAFO;AAGPK,YAAAA,IAAI,EAAErB;AAHC,WAAD,CAAR;AAKD;AACF;AACF;;AACDU,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACJ,WAAD,EAAcL,EAAd,EAAkBI,SAAS,CAACa,MAA5B,CAnBM,CAAT;AAqBA,sBACE,MAAC,SAAD;AAAA,eACGT,QAAQ,iBACT,MAAC,IAAD;AAAA,8BACE;AAAA,mBACGA,QAAQ,CAACgB,QADZ;AAAA,QADF,eAKE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd;AAAhC,QALF,eAME;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd;AAA7B,QANF,eAOE;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd;AAAnC,QAPF,eAQE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B,QARF,eASE;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,OAAO,qCAA8BxB,EAA9B;AAA3B,QATF;AAAA,MAFF,EAcGQ,QAAQ,IAAIA,QAAQ,CAACR,EAAT,MAAgBO,IAAhB,aAAgBA,IAAhB,uBAAgBA,IAAI,CAAEP,EAAtB,CAAZ,gBAEG,KAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAACyB,QAAAA,YAAY,EAAE;AAAf,OADT;AAEE,MAAA,OAAO,EAAE,cACP;AAAA,wCAAoB,cAApB,EAA2BjB,QAAQ,CAACkB,KAApC;AAAA,SAAS,MAAT,CADO,eAEP;AAAA,6CAA+B,cAA/B,EAAsClB,QAAQ,CAACmB,SAA/C;AAAA,SAAS,YAAT,CAFO,eAGP;AAAA,4CAA6B,cAA7B,EAAoCnB,QAAQ,CAACoB,QAA7C;AAAA,SAAS,WAAT,CAHO,CAFX;AAAA,6BAQE,KAAC,IAAD,CAAM,IAAN;AACE,QAAA,KAAK,EAAEpB,QAAQ,CAACgB,QADlB;AAEE,QAAA,MAAM,eACJ,KAAC,IAAD;AAAM,UAAA,IAAI,kBAAWhB,QAAQ,CAACR,EAApB,CAAV;AAAA,iCACE;AAAA,mCAAG,KAAC,MAAD;AAAA,wBAASQ,QAAQ,CAACgB,QAAT,CAAkB,CAAlB;AAAT;AAAH;AADF;AAHJ;AARF,MAFH,GAoBG,IAlCN,OAmCGpB,SAAS,CAACyB,GAAV,CAAc,UAACC,CAAD;AAAA,0BACb,KAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAAC9B,EAAjB,CADa;AAAA,KAAd,CAnCH;AAAA,IADF;AAyCD,CArED;;;AA8FA,eAAeH,IAAf","sourcesContent":["// user/[id].js\r\nimport React, {useEffect} from 'react';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport Link from 'next/link'\r\nimport Head from 'next/head';\r\nimport { Card, Avatar } from 'antd';\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST, LOAD_USER_INFO_REQUEST} from '../../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../component/AppLayout';\r\nimport PostCard from '../../component/PostCard';\r\n\r\nconst User = () => {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const {id} = router.query;\r\n  const {mainPosts, hasMorePost, loadPostsLoading} = useSelector((state) => state.post);\r\n  const {userInfo, user} = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          console.log('lastId: ', lastId);\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            lastId,\r\n            data: id,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, id, mainPosts.length]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {userInfo && (\r\n      <Head>\r\n        <title>\r\n          {userInfo.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta name=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta name=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta name=\"og:image\" content=\"http://nodebird.com/favicon.ico\" />\r\n        <meta name=\"og:url\" content={`https://nodebird.com/pot.${id}`} />\r\n      </Head>\r\n      )}\r\n      {userInfo && userInfo.id !== user?.id\r\n        ? (\r\n          <Card\r\n            style={{marginBottom: 20}}\r\n            actions={[\r\n              <div key=\"twit\">Twit<br />{userInfo.Posts}</div>,\r\n              <div key=\"followings\">Following<br />{userInfo.Following}</div>,\r\n              <div key=\"followers\">Follower<br />{userInfo.Follower}</div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              title={userInfo.nickname}\r\n              avatar={(\r\n                <Link href={`/user/${userInfo.id}`}>\r\n                  <a><Avatar>{userInfo.nickname[0]}</Avatar></a>\r\n                </Link>\r\n              )}\r\n            />\r\n          </Card>\r\n        )\r\n        : null };\r\n      {mainPosts.map((p) => (\r\n        <PostCard key={p.id} post={p} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_INFO_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  console.log('getState', context.store.getState().post.mainPosts);\r\n  return {props: {}};\r\n});\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}