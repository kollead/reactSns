{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\component\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, HeartTwoTone, RetweetOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport dayjs from 'dayjs';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST, MODIFY_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar relativeTime = require('dayjs/plugin/relativeTime');\n\ndayjs.extend(relativeTime);\ndayjs.locale('ko');\n\nfunction PostCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var dispatch = useDispatch();\n\n  var _useState2 = useState(false),\n      editMode = _useState2[0],\n      setEditMode = _useState2[1];\n\n  var onLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onUnLike = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    if (!id) {\n      return alert('로그인이 필요합니다.');\n    }\n\n    return dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  var onClickModify = useCallback(function () {\n    setEditMode(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onModifyPost = useCallback(function (editText) {\n    return function () {\n      dispatch({\n        type: MODIFY_POST_REQUEST,\n        data: {\n          postId: post.id,\n          content: editText\n        }\n      });\n    };\n  }, [post]);\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  });\n  var now = dayjs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!post.RetweetId && /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClickModify,\n              children: \"Modify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 43\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              loading: removePostLoading,\n              onClick: onRemovePost,\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)],\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \" \\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717 \\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 22\n      }, this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 48\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'right'\n          },\n          children: dayjs(post.createdAt).diff(now, 'day') >= 2 ? dayjs(post.createdAt).format('YYYY.MM.DD') : dayjs(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/user/\".concat(post.Retweet.User.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.Retweet.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 19\n          }, this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.Retweet.content,\n            onModifyPost: onModifyPost,\n            onClickModify: onClickModify\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'right'\n          },\n          children: dayjs(post.createdAt).diff(now, 'day') >= 2 ? dayjs(post.createdAt).format('YYYY.MM.DD') : dayjs(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/user/\".concat(post.User.id),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: post.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this),\n          title: post.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            editmode: editMode,\n            postData: post.content,\n            onModifyPost: onModifyPost,\n            onClickModify: onClickModify\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                \"float\": 'right'\n              },\n              children: dayjs(post.createdAt).diff(now, 'day') >= 2 ? dayjs(post.createdAt).format('YYYY.MM.DD') : dayjs(post.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/user/\".concat(item.User),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 26\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostCard, \"JkI/YyyKsCLicHffl/S5W2jPvx8=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Card","Popover","Button","Avatar","List","Comment","EllipsisOutlined","HeartOutlined","MessageOutlined","HeartTwoTone","RetweetOutlined","useSelector","useDispatch","Link","dayjs","PostImages","CommentForm","PostCardContent","FollowButton","REMOVE_POST_REQUEST","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","MODIFY_POST_REQUEST","relativeTime","require","extend","locale","PostCard","post","commentFormOpened","setCommentFormOpened","id","state","user","removePostLoading","dispatch","editMode","setEditMode","onLike","alert","type","data","onUnLike","onRetweet","onToggleComment","prev","onRemovePost","onClickModify","onModifyPost","editText","postId","content","liked","Likers","find","v","now","marginBottom","Images","User","RetweetId","nickname","Retweet","createdAt","diff","format","fromNow","Comments","length","item","propTypes","shape","number","object","string","arrayOf","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Card, Popover, Button, Avatar, List, Comment} from 'antd';\r\nimport {EllipsisOutlined, HeartOutlined, MessageOutlined, HeartTwoTone, RetweetOutlined} from '@ant-design/icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport dayjs from 'dayjs';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport FollowButton from './FollowButton';\r\nimport { REMOVE_POST_REQUEST, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST, MODIFY_POST_REQUEST } from '../reducers/post';\r\n\r\nconst relativeTime = require('dayjs/plugin/relativeTime');\r\n\r\ndayjs.extend(relativeTime);\r\ndayjs.locale('ko');\r\n\r\nfunction PostCard({post}) {\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.user?.id);\r\n  const {removePostLoading} = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onLike = useCallback(\r\n    () => {\r\n      if (!id) {\r\n        return alert('로그인이 필요합니다.');\r\n      }\r\n      return dispatch({\r\n        type: LIKE_POST_REQUEST,\r\n        data: post.id,\r\n      });\r\n    }, [id],\r\n  );\r\n\r\n  const onUnLike = useCallback(\r\n    () => {\r\n      if (!id) {\r\n        return alert('로그인이 필요합니다.');\r\n      }\r\n      return dispatch({\r\n        type: UNLIKE_POST_REQUEST,\r\n        data: post.id,\r\n      });\r\n    }, [id],\r\n  );\r\n\r\n  const onRetweet = useCallback(\r\n    () => {\r\n      if (!id) {\r\n        return alert('로그인이 필요합니다.');\r\n      }\r\n      return dispatch({\r\n        type: RETWEET_REQUEST,\r\n        data: post.id,\r\n      });\r\n    },\r\n    [id],\r\n  );\r\n\r\n  const onToggleComment = useCallback(\r\n    () => {\r\n      setCommentFormOpened((prev) => !prev);\r\n    }, [],\r\n  );\r\n\r\n  const onRemovePost = useCallback(\r\n    () => {\r\n      if (!id) {\r\n        return alert('로그인이 필요합니다.');\r\n      }\r\n      return dispatch({\r\n        type: REMOVE_POST_REQUEST,\r\n        data: post.id,\r\n      });\r\n    }, [id],\r\n  );\r\n\r\n  const onClickModify = useCallback(\r\n    () => {\r\n      setEditMode((prev) => !prev);\r\n    }, [],\r\n  );\r\n  const onModifyPost = useCallback(\r\n    (editText) => () => {\r\n      dispatch({\r\n        type: MODIFY_POST_REQUEST,\r\n        data: {\r\n          postId: post.id,\r\n          content: editText,\r\n        },\r\n      });\r\n    },\r\n    [post],\r\n  );\r\n\r\n  const liked = post.Likers.find((v) => v.id === id);\r\n  const now = dayjs();\r\n\r\n  return (\r\n    <div style={{marginBottom: 10}}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\r\n          liked\r\n            ? <HeartTwoTone twoToneColor=\"eb2f96\" key=\"heart\" onClick={onUnLike} />\r\n            : <HeartOutlined key=\"heart\" onClick={onLike} />,\r\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id\r\n                  ? (\r\n                    <>\r\n                      {!post.RetweetId && <Button onClick={onClickModify}>Modify</Button>}\r\n                      <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>Remove</Button>\r\n                    </>\r\n                  )\r\n                  : <Button>Report</Button>}\r\n              </Button.Group>\r\n            )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n        title={post.RetweetId ? `${post.User.nickname} 님이 리트윗 하셨습니다.` : null}\r\n        extra={id && <FollowButton post={post} />}\r\n      >\r\n        {post.RetweetId && post.Retweet\r\n          ? (\r\n            <Card\r\n              cover={post.Retweet.Images[0] && <PostImages images={post.Retweet.Images} />}\r\n            >\r\n              <div style={{float: 'right'}}>\r\n                {dayjs(post.createdAt).diff(now, 'day') >= 2\r\n                  ? dayjs(post.createdAt).format('YYYY.MM.DD')\r\n                  : dayjs(post.createdAt).fromNow()}\r\n              </div>\r\n              <Card.Meta\r\n                avatar={(\r\n                  <Link href={`/user/${post.Retweet.User.id}`}>\r\n                    <a><Avatar>{post.Retweet.User.nickname[0]}</Avatar></a>\r\n                  </Link>\r\n                )}\r\n                title={post.Retweet.User.nickname}\r\n                description={(\r\n                  <PostCardContent\r\n                    postData={post.Retweet.content}\r\n                    onModifyPost={onModifyPost}\r\n                    onClickModify={onClickModify}\r\n                  />\r\n                )}\r\n              />\r\n            </Card>\r\n          )\r\n          : (\r\n            <>\r\n              <div style={{float: 'right'}}>\r\n                {dayjs(post.createdAt).diff(now, 'day') >= 2\r\n                  ? dayjs(post.createdAt).format('YYYY.MM.DD')\r\n                  : dayjs(post.createdAt).fromNow()}\r\n              </div>\r\n              <Card.Meta\r\n                avatar={(\r\n                  <Link href={`/user/${post.User.id}`}>\r\n                    <a><Avatar>{post.User.nickname[0]}</Avatar></a>\r\n                  </Link>\r\n                  )}\r\n                title={post.User.nickname}\r\n                description={(\r\n                  <PostCardContent\r\n                    editmode={editMode}\r\n                    postData={post.content}\r\n                    onModifyPost={onModifyPost}\r\n                    onClickModify={onClickModify}\r\n                  />\r\n                )}\r\n              />\r\n            </>\r\n          )}\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <div>\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length}개의 댓글`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                <div style={{float: 'right'}}>\r\n                  {dayjs(post.createdAt).diff(now, 'day') >= 2\r\n                    ? dayjs(post.createdAt).format('YYYY.MM.DD')\r\n                    : dayjs(post.createdAt).fromNow()}\r\n                </div>\r\n                <Comment\r\n                  author={item.User.nickname}\r\n                  avatar={(\r\n                    <Link href={`/user/${item.User}`}>\r\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                    </Link>\r\n                    )}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n      )}\r\n      {/* <CommentForm/>\r\n      <Comments/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.string,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Likers: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n    RetweetId: PropTypes.number,\r\n    Retweet: PropTypes.objectOf(PropTypes.any),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}