{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nimport useInput from '../hooks/useInput';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction PostForm() {\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      SetText = _useInput2[2];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (addPostDone) {\n      SetText('');\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (p) {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var imageOnClick = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsx(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"Share your story\"\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImages\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: onClickImageUpload,\n        children: \"Image Upload\"\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": 'right'\n        },\n        htmlType: \"submit\",\n        children: \"Twit\"\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: imagePaths && imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxs(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          onClick: imageOnClick(i),\n          onKeyDown: imageOnClick(i),\n          role: \"presentation\",\n          children: [/*#__PURE__*/_jsx(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsx(Button, {\n              children: \"Remove\"\n            })\n          })]\n        }, v);\n      })\n    })]\n  });\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/PostForm.js"],"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","useInput","PostForm","dispatch","text","onChangeText","SetText","state","post","imagePaths","addPostDone","imageInput","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","imageOnClick","index","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import React, {useCallback, useRef, useEffect} from 'react';\r\nimport { Form, Input, Button} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST} from '../reducers/post';\r\nimport useInput from '../hooks/useInput';\r\n\r\nfunction PostForm() {\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText, SetText] = useInput();\r\n  const {imagePaths, addPostDone} = useSelector((state) => state.post);\r\n  const imageInput = useRef();\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      SetText('');\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(\r\n    () => {\r\n      if (!text || !text.trim()) {\r\n        return alert('게시글을 작성하세요');\r\n      }\r\n      const formData = new FormData();\r\n      imagePaths.forEach((p) => {\r\n        formData.append('image', p);\r\n      });\r\n      formData.append('content', text);\r\n      return dispatch({\r\n        type: ADD_POST_REQUEST,\r\n        data: formData,\r\n      });\r\n    },\r\n    [text, imagePaths],\r\n  );\r\n  const onClickImageUpload = useCallback(\r\n    () => {\r\n      imageInput.current.click();\r\n    },\r\n    [imageInput.current],\r\n  );\r\n\r\n  const onChangeImages = useCallback(\r\n    (e) => {\r\n      console.log('images', e.target.files);\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, (f) => {\r\n        imageFormData.append('image', f);\r\n      });\r\n      dispatch({\r\n        type: UPLOAD_IMAGES_REQUEST,\r\n        data: imageFormData,\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  const imageOnClick = useCallback(\r\n    (index) => () => {\r\n      dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data: index,\r\n      });\r\n    },\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <Form style={{margin: '10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"Share your story\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n        <Button onClick={onClickImageUpload}>Image Upload</Button>\r\n        <Button\r\n          type=\"primary\"\r\n          style={{float: 'right'}}\r\n          htmlType=\"submit\"\r\n        >\r\n          Twit\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths && imagePaths.map((v, i) => (\r\n          <div key={v} style={{display: 'inline-block'}} onClick={imageOnClick(i)} onKeyDown={imageOnClick(i)} role=\"presentation\">\r\n            <img\r\n              src={`http://localhost:3065/${v}`}\r\n              style={{width: '200px'}}\r\n              alt={v}\r\n            />\r\n            <div><Button>Remove</Button></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}