{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post';\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('hydrate', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAChCI,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAoB;AACvB,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKR,OAAL;AACIS,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAWD,KAAX,GAAqBC,MAAM,CAACI,OAA5B;;AAEJ;AACI,eAAOL,KAAP;AANR;AAQH,GAV+B;AAWhCJ,EAAAA,IAXgC;AAYhCC,EAAAA;AAZgC,CAAD,CAAnC;AAcA,eAAeC,WAAf","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper'\r\nimport {combineReducers} from 'redux'\r\nimport user from './user'\r\nimport post from './post'\r\n\r\nconst rootReducer = combineReducers({\r\n    index: (state={}, action)=>{\r\n        switch (action.type) {\r\n            case HYDRATE : \r\n                console.log('hydrate', action)\r\n                return {...state, ...action.payload};\r\n            \r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    user,\r\n    post\r\n});\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}