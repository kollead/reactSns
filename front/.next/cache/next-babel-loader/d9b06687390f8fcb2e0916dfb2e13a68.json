{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nconst initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  }\n};\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\n\nexport const LOG_OUT = 'LOG_OUT';\nexport const loginAction = data => {\n  return {\n    type: LOG_IN,\n    data\n  };\n};\nexport const logoutAction = {\n  type: LOG_OUT\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log('HYDRATE', action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case LOG_IN:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: true,\n          loginData: action.data\n        });\n      }\n\n    case LOG_OUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggedIn: false,\n          user: null\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/reducers/index.js"],"names":["HYDRATE","initialState","user","isLoggedIn","signUpData","loginData","LOG_IN","LOG_OUT","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACNC,IAAAA,UAAU,EAAE,KADN;AAEND,IAAAA,IAAI,EAAE,IAFA;AAGNE,IAAAA,UAAU,EAAE,EAHN;AAINC,IAAAA,SAAS,EAAE;AAJL;AADW,CAArB;AAQA,OAAO,MAAMC,MAAM,GAAG,QAAf,C,CAAyB;;AAChC,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,MADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALI;AAOL,OAAO,MAAME,YAAY,GAAG;AAC1BD,EAAAA,IAAI,EAAEH;AADoB,CAArB;;AAKT,MAAMK,WAAW,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAuBa,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKV,OAAL;AACIe,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACA,6CAAWD,KAAX,GAAqBC,MAAM,CAACG,OAA5B;;AACJ,SAAKX,MAAL;AAAa;AACX,+CACKO,KADL;AAEEV,UAAAA,UAAU,EAAE,IAFd;AAGEE,UAAAA,SAAS,EAAES,MAAM,CAACL;AAHpB;AAKD;;AACD,SAAKF,OAAL;AAAc;AACZ,+CACKM,KADL;AAEEV,UAAAA,UAAU,EAAE,KAFd;AAGED,UAAAA,IAAI,EAAE;AAHR;AAKD;;AACD;AAAU;AACN,iCAAWW,KAAX;AACH;AApBH;AAsBH,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import {HYDRATE} from 'next-redux-wrapper'\r\n\r\nconst initialState = {\r\n    user: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {}}\r\n  };\r\n\r\nexport const LOG_IN = 'LOG_IN'; // 액션의 이름\r\nexport const LOG_OUT = 'LOG_OUT';\r\n\r\nexport const loginAction = (data) => {\r\n    return {\r\n      type: LOG_IN,\r\n      data,\r\n    }\r\n  };\r\n\r\n  export const logoutAction = {\r\n    type: LOG_OUT,\r\n  };\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE :\r\n          console.log('HYDRATE', action);\r\n          return {...state, ...action.payload}   \r\n      case LOG_IN: {\r\n        return {\r\n          ...state,\r\n          isLoggedIn: true,\r\n          loginData: action.data,\r\n        };\r\n      }\r\n      case LOG_OUT: {\r\n        return {\r\n          ...state,\r\n          isLoggedIn: false,\r\n          user: null,\r\n        };\r\n      }\r\n      default : {\r\n          return {...state}\r\n      }\r\n}\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}