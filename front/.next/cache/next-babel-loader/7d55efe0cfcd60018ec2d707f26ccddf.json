{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport reducer from '../reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst configureStore = () => {\n  const middlewares = [];\n  const enhencer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhencer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/store/configureStore.js"],"names":["createWrapper","compose","createStore","applyMiddleware","reducer","composeWithDevTools","configureStore","middlewares","enhencer","store","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,OAAR,EAAiBC,WAAjB,EAA8BC,eAA9B,QAAoD,OAApD;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAG,QACXP,OAAO,CAACE,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CADI,GAEXF,mBAAmB,CAACF,eAAe,CAAC,GAAGI,WAAJ,CAAhB,CAFzB;AAGA,QAAME,KAAK,GAAIP,WAAW,CAACE,OAAD,EAAUI,QAAV,CAA1B;AACA,SAAOC,KAAP;AACH,CAPD;;AASA,MAAMC,OAAO,GAAGV,aAAa,CAACM,cAAD,EAAiB;AAC1CK,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from 'next-redux-wrapper';\r\nimport {compose, createStore, applyMiddleware} from 'redux'\r\nimport reducer from '../reducers'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nconst configureStore = () => {\r\n    const middlewares = []\r\n    const enhencer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store =  createStore(reducer, enhencer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development', \r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}