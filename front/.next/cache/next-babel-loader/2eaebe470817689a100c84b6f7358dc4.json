{"ast":null,"code":"import { all, fork, takeLatest, put, call, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, MODIFY_POST_REQUEST, MODIFY_POST_SUCCESS, MODIFY_POST_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}}/comment`, data);\n}\n\nfunction removeCommentAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}}/like`);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}}/like`);\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction modifyPostAPI(data) {\n  return axios.patch(`/post/${data.postId}`, data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* modifyPost(action) {\n  try {\n    const result = yield call(modifyPostAPI, action.data);\n    yield put({\n      type: MODIFY_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: MODIFY_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadUserPosts() {\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchModifyPost() {\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchRetweet), fork(watchLoadPost), fork(watchModifyPost)]);\n}","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/sagas/post.js"],"names":["all","fork","takeLatest","put","call","throttle","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_REQUEST","UNLIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_SUCCESS","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","MODIFY_POST_REQUEST","MODIFY_POST_SUCCESS","MODIFY_POST_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadUserPostsAPI","data","loadHashtagPostsAPI","encodeURIComponent","loadPostAPI","addPostAPI","post","addCommentAPI","postId","removeCommentAPI","unlikePostAPI","delete","likePostAPI","patch","removePostAPI","uploadImagesAPI","retweetAPI","modifyPostAPI","addPost","action","result","type","id","error","response","addComment","removePost","loadPosts","loadUserPosts","console","loadHashtagPosts","loadPost","unlikePost","likePost","uploadImages","retweet","modifyPost","watchAddPost","watchAddComment","watchRemovePost","watchLoadPosts","watchLoadUserPosts","watchLoadHashtagPosts","watchLikePost","watchUnlikePost","watchUploadImages","watchRetweet","watchLoadPost","watchModifyPost","postSaga"],"mappings":"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","sourcesContent":["import {all, fork, takeLatest, put, call, throttle } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS,\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,\r\n  LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS,\r\n  UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, MODIFY_POST_REQUEST, MODIFY_POST_SUCCESS, MODIFY_POST_FAILURE} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME} from '../reducers/user';\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\nfunction loadUserPostsAPI(data, lastId) {\r\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\r\n}\r\nfunction loadHashtagPostsAPI(data, lastId) {\r\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\r\n}\r\nfunction loadPostAPI(data) {\r\n  return axios.get(`/post/${data}`);\r\n}\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data);\r\n}\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}}/comment`, data);\r\n}\r\nfunction removeCommentAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}}/like`);\r\n}\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}}/like`);\r\n}\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data);\r\n}\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`);\r\n}\r\nfunction modifyPostAPI(data) {\r\n  return axios.patch(`/post/${data.postId}`, data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.lastId);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadUserPosts(action) {\r\n  try {\r\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put({\r\n      type: LOAD_USER_POSTS_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadHashtagPosts(action) {\r\n  try {\r\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_HASHTAG_POSTS_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPost(action) {\r\n  try {\r\n    const result = yield call(loadPostAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* modifyPost(action) {\r\n  try {\r\n    const result = yield call(modifyPostAPI, action.data);\r\n    yield put({\r\n      type: MODIFY_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: MODIFY_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchLoadUserPosts() {\r\n  yield throttle(5000, LOAD_USER_POSTS_REQUEST, loadUserPosts);\r\n}\r\nfunction* watchLoadHashtagPosts() {\r\n  yield throttle(5000, LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\nfunction* watchLoadPost() {\r\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\r\n}\r\nfunction* watchModifyPost() {\r\n  yield takeLatest(MODIFY_POST_REQUEST, modifyPost);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLoadUserPosts),\r\n    fork(watchLoadHashtagPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchUploadImages),\r\n    fork(watchRetweet),\r\n    fork(watchLoadPost),\r\n    fork(watchModifyPost),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}