{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\pages\\\\hashtag\\\\[tag].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// hashtag/[tag].js\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../component/AppLayout';\nimport PostCard from '../../component/PostCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Hashtag = function Hashtag() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          console.log('lastId: ', lastId);\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: lastId,\n            data: tag\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, tag, loadPostsLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: mainPosts.map(function (p) {\n      return /*#__PURE__*/_jsxDEV(PostCard, {\n        post: p\n      }, p.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Hashtag, \"CM04Fwwx3x11ZSkUOyVypY4gKl4=\", false, function () {\n  return [useDispatch, useRouter, useSelector];\n});\n\n_c = Hashtag;\nexport var __N_SSP = true;\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/hashtag/[tag].js"],"names":["React","useEffect","useSelector","useDispatch","useRouter","LOAD_HASHTAG_POSTS_REQUEST","AppLayout","PostCard","Hashtag","dispatch","router","tag","query","state","post","mainPosts","hasMorePost","loadPostsLoading","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","console","log","type","data","addEventListener","removeEventListener","map","p"],"mappings":";;;;AAAA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAIA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,MAAM,GAAGN,SAAS,EAAxB;AAFoB,MAGbO,GAHa,GAGND,MAAM,CAACE,KAHD,CAGbD,GAHa;;AAAA,qBAI+BT,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAJ1C;AAAA,MAIbC,SAJa,gBAIbA,SAJa;AAAA,MAIFC,WAJE,gBAIFA,WAJE;AAAA,MAIWC,gBAJX,gBAIWA,gBAJX;;AAMpBhB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASiB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAD5C,EACiD;AAC/C,YAAIR,WAAW,IAAI,CAACC,gBAApB,EAAsC;AAAA;;AACpC,cAAMQ,MAAM,iBAAGV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,MAAxB;AACAhB,UAAAA,QAAQ,CAAC;AACPqB,YAAAA,IAAI,EAAEzB,0BADC;AAEPoB,YAAAA,MAAM,EAANA,MAFO;AAGPM,YAAAA,IAAI,EAAEpB;AAHC,WAAD,CAAR;AAKD;AACF;AACF;;AACDQ,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACF,WAAD,EAAcL,GAAd,EAAmBM,gBAAnB,EAAqCF,SAArC,CAnBM,CAAT;AAqBA,sBACE,QAAC,SAAD;AAAA,cACGA,SAAS,CAACmB,GAAV,CAAc,UAACC,CAAD;AAAA,0BACb,QAAC,QAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAeA,CAAC,CAACR,EAAjB;AAAA;AAAA;AAAA;AAAA,eADa;AAAA,KAAd;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAlCD;;GAAMnB,O;UACaL,W,EACFC,S,EAEoCF,W;;;KAJ/CM,O;;AAqDN,eAAeA,OAAf","sourcesContent":["// hashtag/[tag].js\r\n\r\nimport React, {useEffect} from 'react';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../../reducers/user';\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../component/AppLayout';\r\nimport PostCard from '../../component/PostCard';\r\n\r\nconst Hashtag = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const {tag} = router.query;\r\n  const {mainPosts, hasMorePost, loadPostsLoading} = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          console.log('lastId: ', lastId);\r\n          dispatch({\r\n            type: LOAD_HASHTAG_POSTS_REQUEST,\r\n            lastId,\r\n            data: tag,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, tag, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {mainPosts.map((p) => (\r\n        <PostCard key={p.id} post={p} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_HASHTAG_POSTS_REQUEST,\r\n    data: context.params.tag,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Hashtag;\r\n"]},"metadata":{},"sourceType":"module"}