{"ast":null,"code":"// user/[id].js\nimport React, { useEffect } from 'react';\nimport { END } from 'redux-saga';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { Card, Avatar } from 'antd';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../component/AppLayout';\nimport PostCard from '../../component/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst User = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    user\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    function onScroll() {\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          console.log('lastId: ', lastId);\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId,\n            data: id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, id, mainPosts.length]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [userInfo && /*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:title\",\n        content: `${userInfo.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: `${userInfo.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: \"http://nodebird.com/favicon.ico\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: `https://nodebird.com/pot.${id}`\n      })]\n    }), userInfo && userInfo.id !== (user === null || user === void 0 ? void 0 : user.id) ? /*#__PURE__*/_jsx(Card, {\n      style: {\n        marginBottom: 20\n      },\n      actions: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Twit\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Posts]\n      }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Following\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Following]\n      }, \"followings\"), /*#__PURE__*/_jsxs(\"div\", {\n        children: [\"Follower\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Follower]\n      }, \"followers\")],\n      children: /*#__PURE__*/_jsx(Card.Meta, {\n        title: userInfo.nickname,\n        avatar: /*#__PURE__*/_jsx(Link, {\n          href: `/user/${userInfo.id}`,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: /*#__PURE__*/_jsx(Avatar, {\n              children: userInfo.nickname[0]\n            })\n          })\n        })\n      })\n    }) : null, \";\", mainPosts.map(p => /*#__PURE__*/_jsx(PostCard, {\n      post: p\n    }, p.id))]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch({\n    type: LOAD_USER_INFO_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n  console.log('getState', context.store.getState().post.mainPosts);\n  return {\n    props: {}\n  };\n});\nexport default User;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/user/[id].js"],"names":["React","useEffect","END","useSelector","useDispatch","useRouter","axios","Link","Head","Card","Avatar","wrapper","LOAD_MY_INFO_REQUEST","LOAD_USER_INFO_REQUEST","LOAD_USER_POSTS_REQUEST","AppLayout","PostCard","User","router","dispatch","id","query","mainPosts","hasMorePost","loadPostsLoading","state","post","userInfo","user","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","console","log","type","data","addEventListener","removeEventListener","nickname","marginBottom","Posts","Following","Follower","map","p","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","params","sagaTask","toPromise","getState","props"],"mappings":"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","sourcesContent":["// user/[id].js\r\nimport React, {useEffect} from 'react';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport Link from 'next/link'\r\nimport Head from 'next/head';\r\nimport { Card, Avatar } from 'antd';\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST, LOAD_USER_INFO_REQUEST} from '../../reducers/user';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../component/AppLayout';\r\nimport PostCard from '../../component/PostCard';\r\n\r\nconst User = () => {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const {id} = router.query;\r\n  const {mainPosts, hasMorePost, loadPostsLoading} = useSelector((state) => state.post);\r\n  const {userInfo, user} = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.pageYOffset + document.documentElement.clientHeight\r\n        > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          console.log('lastId: ', lastId);\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            lastId,\r\n            data: id,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, id, mainPosts.length]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {userInfo && (\r\n      <Head>\r\n        <title>\r\n          {userInfo.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta name=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta name=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n        <meta name=\"og:image\" content=\"http://nodebird.com/favicon.ico\" />\r\n        <meta name=\"og:url\" content={`https://nodebird.com/pot.${id}`} />\r\n      </Head>\r\n      )}\r\n      {userInfo && userInfo.id !== user?.id\r\n        ? (\r\n          <Card\r\n            style={{marginBottom: 20}}\r\n            actions={[\r\n              <div key=\"twit\">Twit<br />{userInfo.Posts}</div>,\r\n              <div key=\"followings\">Following<br />{userInfo.Following}</div>,\r\n              <div key=\"followers\">Follower<br />{userInfo.Follower}</div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              title={userInfo.nickname}\r\n              avatar={(\r\n                <Link href={`/user/${userInfo.id}`}>\r\n                  <a><Avatar>{userInfo.nickname[0]}</Avatar></a>\r\n                </Link>\r\n              )}\r\n            />\r\n          </Card>\r\n        )\r\n        : null };\r\n      {mainPosts.map((p) => (\r\n        <PostCard key={p.id} post={p} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_USER_INFO_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  console.log('getState', context.store.getState().post.mainPosts);\r\n  return {props: {}};\r\n});\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}