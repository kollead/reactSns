{"ast":null,"code":"import React, { useCallback, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { END } from 'redux-saga';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport styled from 'styled-components';\nimport AppLayout from '../component/AppLayout';\nimport useInput from '../hooks/useInput';\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\nimport wrapper from '../store/configureStore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst ErrorMessage = styled.div`\n    color: red;\n`;\n\nconst Signup = () => {\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    user\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (user && user.id) {\n      Router.replace('/');\n    }\n  }, [user && user.id]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace('/');\n    }\n  }, [signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const {\n    0: term,\n    1: setTerm\n  } = useState('');\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n    setTermError(false);\n  }, []);\n  const onSignUp = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, passwordCheck);\n    return dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        password,\n        nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Sign Up | NodeBird\"\n      })\n    }), /*#__PURE__*/_jsxs(Form, {\n      onFinish: onSignUp,\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-email\",\n          children: \"Email\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-email\",\n          value: email,\n          type: \"email\",\n          required: true,\n          onChange: onChangeEmail\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-nickname\",\n          children: \"Id\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-nickname\",\n          value: nickname,\n          required: true,\n          onChange: onChangeNickname\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-password\",\n          children: \"Password\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password\",\n          type: \"password\",\n          value: password,\n          required: true,\n          onChange: onChangePassword\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"user-id\",\n          children: \"Password Check\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n          name: \"user-password-check\",\n          type: \"password\",\n          value: passwordCheck,\n          required: true,\n          onChange: onChangePasswordCheck\n        }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"Password does not match\"\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsx(Checkbox, {\n          name: \"user-term\",\n          checked: term,\n          onChange: onChangeTerm,\n          children: \"Be nice\"\n        }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n          children: \"You need to agree the statement\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: /*#__PURE__*/_jsx(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: signUpLoading,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/signup.js"],"names":["React","useCallback","useState","useEffect","useSelector","useDispatch","axios","END","Router","Head","Form","Input","Checkbox","Button","styled","AppLayout","useInput","SIGN_UP_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","ErrorMessage","div","Signup","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","dispatch","signUpLoading","signUpDone","signUpError","user","state","id","replace","alert","passwordCheck","setPasswordCheck","passwordError","setPasswordError","onChangePasswordCheck","e","target","value","term","setTerm","termError","setTermError","onChangeTerm","checked","onSignUp","console","log","type","data","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, {useCallback, useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { END } from 'redux-saga';\r\nimport Router from 'next/router';\r\nimport Head from 'next/head';\r\nimport {Form, Input, Checkbox, Button} from 'antd';\r\nimport styled from 'styled-components';\r\nimport AppLayout from '../component/AppLayout';\r\nimport useInput from '../hooks/useInput';\r\nimport { SIGN_UP_REQUEST, LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport wrapper from '../store/configureStore';\r\n\r\nconst ErrorMessage = styled.div`\r\n    color: red;\r\n`;\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  const [password, onChangePassword] = useInput('');\r\n  const dispatch = useDispatch();\r\n  const {signUpLoading, signUpDone, signUpError, user} = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id) {\r\n      Router.replace('/');\r\n    }\r\n  }, [user && user.id]);\r\n  useEffect(() => {\r\n    if (signUpDone) {\r\n      Router.replace('/');\r\n    }\r\n  }, [signUpDone]);\r\n  useEffect(() => {\r\n    if (signUpError) {\r\n      alert(signUpError);\r\n    }\r\n  }, [signUpError]);\r\n\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setPasswordError(e.target.value !== password);\r\n    }, [password],\r\n  );\r\n\r\n  const [term, setTerm] = useState('');\r\n  const [termError, setTermError] = useState(false);\r\n  const onChangeTerm = useCallback(\r\n    (e) => {\r\n      setTerm(e.target.checked);\r\n      setTermError(false);\r\n    }, [],\r\n  );\r\n\r\n  const onSignUp = useCallback(\r\n    () => {\r\n      if (password !== passwordCheck) {\r\n        return setPasswordError(true);\r\n      }\r\n      if (!term) {\r\n        return setTermError(true);\r\n      }\r\n      console.log(email, nickname, passwordCheck);\r\n      return dispatch({\r\n        type: SIGN_UP_REQUEST,\r\n        data: {email, password, nickname},\r\n      });\r\n    }, [email, password, passwordCheck, term],\r\n  );\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>Sign Up | NodeBird</title>\r\n      </Head>\r\n      <Form onFinish={onSignUp}>\r\n        <div>\r\n          <label htmlFor=\"user-email\">Email</label>\r\n          <br />\r\n          <Input name=\"user-email\" value={email} type=\"email\" required onChange={onChangeEmail} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-nickname\">Id</label>\r\n          <br />\r\n          <Input name=\"user-nickname\" value={nickname} required onChange={onChangeNickname} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-password\">Password</label>\r\n          <br />\r\n          <Input name=\"user-password\" type=\"password\" value={password} required onChange={onChangePassword} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"user-id\">Password Check</label>\r\n          <br />\r\n          <Input\r\n            name=\"user-password-check\"\r\n            type=\"password\"\r\n            value={passwordCheck}\r\n            required\r\n            onChange={onChangePasswordCheck}\r\n          />\r\n          {passwordError && <ErrorMessage>Password does not match</ErrorMessage>}\r\n        </div>\r\n        <div>\r\n          <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>Be nice</Checkbox>\r\n          {termError && <ErrorMessage>You need to agree the statement</ErrorMessage>}\r\n        </div>\r\n        <div style={{marginTop: 10}}>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>Sign up</Button>\r\n        </div>\r\n      </Form>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}