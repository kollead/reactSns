{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\component\\\\PostCardContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport Input from 'antd/lib/input';\nimport Button from 'antd/lib/button';\nimport { useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar TextArea = Input.TextArea;\n\nfunction PostCardContent(_ref) {\n  _s();\n\n  var _this = this;\n\n  var postData = _ref.postData,\n      editMode = _ref.editMode,\n      onModifyPost = _ref.onModifyPost,\n      onClickModify = _ref.onClickModify;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      modifyPostLoading = _useSelector.modifyPostLoading,\n      modifyPostDone = _useSelector.modifyPostDone;\n\n  var _useInput = useInput(postData),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      editText = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setEditText = _useInput2[2];\n\n  useEffect(function () {\n    if (modifyPostDone) {\n      onClickModify();\n    }\n  }, [modifyPostDone]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: editText,\n        onChange: onChangeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          loading: modifyPostLoading,\n          onClick: onModifyPost(editText),\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"danger\",\n          onClick: onClickModify,\n          children: \"\\uC218\\uC815 \\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : postData.split(/(#[^\\s#]+)/g).map(function (v) {\n      if (v.match(/(#[^\\s#]+)/)) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/hashtag/\".concat(v.slice(1)),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 66\n          }, _this)\n        }, v, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, _this);\n      }\n\n      return v;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostCardContent, \"kPW/rklV65b5VczKQUqsmnFeMrM=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = PostCardContent;\nPostCardContent.propTypes = {\n  postData: PropTypes.string.isRequired,\n  editMode: PropTypes.bool,\n  onModifyPost: PropTypes.func.isRequired,\n  onClickModify: PropTypes.func.isRequired\n};\nPostCardContent.defaultProps = {\n  editMode: false\n};\nexport default PostCardContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCardContent\");","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/PostCardContent.js"],"names":["React","useState","useCallback","useEffect","Link","PropTypes","Input","Button","useSelector","useInput","TextArea","PostCardContent","postData","editMode","onModifyPost","onClickModify","state","post","modifyPostLoading","modifyPostDone","editText","onChangeText","setEditText","split","map","v","match","slice","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;IAEOC,Q,GAAYJ,K,CAAZI,Q;;AAEP,SAASC,eAAT,OAA4E;AAAA;;AAAA;;AAAA,MAAlDC,QAAkD,QAAlDA,QAAkD;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,MAAhBC,aAAgB,QAAhBA,aAAgB;;AAAA,qBAC5BP,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CADiB;AAAA,MAClEC,iBADkE,gBAClEA,iBADkE;AAAA,MAC/CC,cAD+C,gBAC/CA,cAD+C;;AAAA,kBAE5BV,QAAQ,CAACG,QAAD,CAFoB;AAAA;AAAA,MAEnEQ,QAFmE;AAAA,MAEzDC,YAFyD;AAAA,MAE3CC,WAF2C;;AAG1EnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgB,cAAJ,EAAoB;AAClBJ,MAAAA,aAAa;AACd;AACF,GAJQ,EAIN,CAACI,cAAD,CAJM,CAAT;AAMA,sBACE;AAAA,cACGN,QAAQ,gBAEL;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEO,QAAjB;AAA2B,QAAA,QAAQ,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,KAAR;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEH,iBAAjB;AAAoC,UAAA,OAAO,EAAEJ,YAAY,CAACM,QAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEL,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAFK,GAULH,QAAQ,CAACW,KAAT,CAAe,aAAf,EAA8BC,GAA9B,CAAkC,UAACC,CAAD,EAAO;AACzC,UAAIA,CAAC,CAACC,KAAF,CAAQ,YAAR,CAAJ,EAA2B;AACzB,4BAAO,QAAC,IAAD;AAAc,UAAA,IAAI,qBAAcD,CAAC,CAACE,KAAF,CAAQ,CAAR,CAAd,CAAlB;AAAA,iCAA8C;AAAA,sBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AAA9C,WAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AACD,aAAOA,CAAP;AACD,KALC;AAXN;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA7BQd,e;UACuCH,W,EACAC,Q;;;KAFvCE,e;AA+BTA,eAAe,CAACiB,SAAhB,GAA4B;AAC1BhB,EAAAA,QAAQ,EAAEP,SAAS,CAACwB,MAAV,CAAiBC,UADD;AAE1BjB,EAAAA,QAAQ,EAAER,SAAS,CAAC0B,IAFM;AAG1BjB,EAAAA,YAAY,EAAET,SAAS,CAAC2B,IAAV,CAAeF,UAHH;AAI1Bf,EAAAA,aAAa,EAAEV,SAAS,CAAC2B,IAAV,CAAeF;AAJJ,CAA5B;AAOAnB,eAAe,CAACsB,YAAhB,GAA+B;AAC7BpB,EAAAA,QAAQ,EAAE;AADmB,CAA/B;AAIA,eAAeF,eAAf","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes from 'prop-types';\r\nimport Input from 'antd/lib/input';\r\nimport Button from 'antd/lib/button';\r\nimport { useSelector} from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\n\r\nconst {TextArea} = Input;\r\n\r\nfunction PostCardContent({postData, editMode, onModifyPost, onClickModify}) {\r\n  const { modifyPostLoading, modifyPostDone } = useSelector((state) => state.post);\r\n  const [editText, onChangeText, setEditText] = useInput(postData);\r\n  useEffect(() => {\r\n    if (modifyPostDone) {\r\n      onClickModify();\r\n    }\r\n  }, [modifyPostDone]);\r\n\r\n  return (\r\n    <div>\r\n      {editMode\r\n        ? (\r\n          <>\r\n            <TextArea value={editText} onChange={onChangeText} />\r\n            <Button.Group>\r\n              <Button loading={modifyPostLoading} onClick={onModifyPost(editText)}>수정</Button>\r\n              <Button type=\"danger\" onClick={onClickModify}>수정 취소</Button>\r\n            </Button.Group>\r\n          </>\r\n        )\r\n        : postData.split(/(#[^\\s#]+)/g).map((v) => {\r\n          if (v.match(/(#[^\\s#]+)/)) {\r\n            return <Link key={v} href={`/hashtag/${v.slice(1)}`}><a>{v}</a></Link>;\r\n          }\r\n          return v;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nPostCardContent.propTypes = {\r\n  postData: PropTypes.string.isRequired,\r\n  editMode: PropTypes.bool,\r\n  onModifyPost: PropTypes.func.isRequired,\r\n  onClickModify: PropTypes.func.isRequired,\r\n};\r\n\r\nPostCardContent.defaultProps = {\r\n  editMode: false,\r\n};\r\n\r\nexport default PostCardContent;\r\n"]},"metadata":{},"sourceType":"module"}