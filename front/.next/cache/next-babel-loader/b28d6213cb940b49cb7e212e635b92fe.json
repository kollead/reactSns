{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'antd';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FollowButton = function FollowButton(_ref) {\n  var _user$Following;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      user = _useSelector.user,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading;\n\n  var isFollowing = user === null || user === void 0 ? void 0 : (_user$Following = user.Following) === null || _user$Following === void 0 ? void 0 : _user$Following.find(function (v) {\n    return v.id === post.User.id;\n  });\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n      console.log('isFollowing: ', isFollowing);\n      console.log('isFollowing2: ', user === null || user === void 0 ? void 0 : user.Following.find(function (v) {\n        return v.id === post.User.id;\n      }));\n      console.log('user: ', user.Following);\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n      console.log('isFollowing: ', isFollowing);\n      console.log('isFollowing2: ', user === null || user === void 0 ? void 0 : user.Following.find(function (v) {\n        return v.id === post.User.id;\n      }));\n      console.log('user: ', user.Following);\n    }\n  }, [isFollowing]);\n\n  if (post.User.id === user.id) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    children: isFollowing ? '언팔로우' : '팔로우'\n  });\n};\n\nexport default FollowButton;","map":null,"metadata":{},"sourceType":"module"}