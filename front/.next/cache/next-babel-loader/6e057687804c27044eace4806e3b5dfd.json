{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\component\\\\PostCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, HeartFilled, RetweetOutlined } from \"@ant-design/icons\";\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var id = useSelector(function (state) {\n    var _state$user$user;\n\n    return (_state$user$user = state.user.user) === null || _state$user$user === void 0 ? void 0 : _state$user$user.id;\n  });\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartFilled, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Modify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.user.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostCard, \"bdrNUpTRpiSbLJZ60VfDe9W9ESI=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/PostCard.js"],"names":["React","useState","useCallback","PropTypes","Card","Popover","Button","Avatar","List","Comment","EllipsisOutlined","HeartOutlined","MessageOutlined","HeartFilled","RetweetOutlined","useSelector","PostImages","CommentForm","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","Comments","length","item","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Card, Popover, Button, Avatar, List, Comment} from 'antd'\r\nimport {EllipsisOutlined, HeartOutlined, MessageOutlined, HeartFilled, RetweetOutlined} from \"@ant-design/icons\"\r\nimport { useSelector } from 'react-redux'\r\nimport PostImages from './PostImages'\r\nimport CommentForm from './CommentForm'\r\n\r\nfunction PostCard({post}) {\r\n\r\n    const [liked, setLiked] = useState(false)\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false)\r\n    const id = useSelector(state=>state.user.user?.id)\r\n    const onToggleLike = useCallback(\r\n        () => {\r\n            setLiked((prev)=>!prev);\r\n        },\r\n        [],\r\n    )\r\n    const onToggleComment = useCallback(\r\n        () => {\r\n            setCommentFormOpened((prev) => !prev);   \r\n        },\r\n        [],\r\n    )\r\n    return (\r\n        <div style={{marginBottom: 10}}>\r\n            <Card\r\n                cover={post.Images[0]\r\n                && <PostImages images={post.Images}/>}\r\n                actions = {[\r\n                    <RetweetOutlined key=\"retweet\"/>,\r\n                    \r\n                    liked\r\n                        ? <HeartFilled  key=\"heart\" onClick={onToggleLike}/>\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike}/>\r\n                    ,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\r\n                    <Popover key=\"more\" \r\n                     content={(\r\n                        <Button.Group>\r\n                          {id&&post.User.id===id ? (\r\n                            <>  \r\n                             <Button>Modify</Button>\r\n                             <Button>Remove</Button>\r\n                            </>)\r\n                         : <Button>Report</Button>}\r\n                         </Button.Group>)}>\r\n                        <EllipsisOutlined/>\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                \r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n                \r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post}/>\r\n                    <List\r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item) => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.user.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )\r\n                        }\r\n                    />\r\n                </div>\r\n            )}\r\n            {/*<CommentForm/>\r\n            <Comments/>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nPostCard.propTypes={\r\n    post: PropTypes.object.isRequired\r\n}\r\n\r\nexport default PostCard\r\n"]},"metadata":{},"sourceType":"module"}