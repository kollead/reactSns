{"ast":null,"code":"// post/[id].js\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport AppLayout from '../../component/AppLayout';\nimport PostCard from '../../component/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Post = function Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:title\",\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'http://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: \"https://nodebird.com/pot.\".concat(id)\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/post/[id].js"],"names":["React","useSelector","useRouter","Head","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAIA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AADiB,MAEVM,EAFU,GAEJD,MAAM,CAACE,KAFH,CAEVD,EAFU;;AAAA,qBAGIP,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHf;AAAA,MAGVC,UAHU,gBAGVA,UAHU;;AAKjB,sBACE,MAAC,SAAD;AAAA,4BACE,MAAC,IAAD;AAAA,8BACE;AAAA,mBACGA,UAAU,CAACC,IAAX,CAAgBC,QADnB;AAAA,QADF,eAKE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,QALF,eAME;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAA7B,QANF,eAOE;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,OAAO,EAAEF,UAAU,CAACG;AAAhD,QAPF,eAQE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IAAuBJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAAjF,QARF,eASE;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,OAAO,qCAA8BT,EAA9B;AAA3B,QATF;AAAA,MADF,eAYE,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEI;AAAhB,MAZF;AAAA,IADF;AAgBD,CArBD;;;AAwCA,eAAeN,IAAf","sourcesContent":["// post/[id].js\r\nimport React from 'react';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport Head from 'next/head';\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../component/AppLayout';\r\nimport PostCard from '../../component/PostCard';\r\n\r\nconst Post = () => {\r\n  const router = useRouter();\r\n  const {id} = router.query;\r\n  const {singlePost} = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {singlePost.User.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta name=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n        <meta name=\"og:description\" content={singlePost.content} />\r\n        <meta name=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'http://nodebird.com/favicon.ico'} />\r\n        <meta name=\"og:url\" content={`https://nodebird.com/pot.${id}`} />\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}