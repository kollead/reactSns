{"ast":null,"code":"import shortid from 'shortid';\nimport produce from 'immer';\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '01'\n    },\n    content: 'first content #first #content',\n    Images: [{\n      src: 'https://64.media.tumblr.com/8688f176d0167d668fbc9750ff073824/bc6d6432604e5468-9d/s2048x3072/47d2d8df5f150f6e4cf38a83dc410e298d2490f8.png'\n    }, {\n      src: 'https://64.media.tumblr.com/a42d9b563516bb893a8dac4628e62797/6ae9d73862ac638e-12/s2048x3072/063476d81525dbe411150e77944da0b7712bf974.png'\n    }, {\n      src: 'https://64.media.tumblr.com/08a193b5577ba6e9a921605b7e698e5d/5baeef4540e82612-c6/s2048x3072/5521390db472cb1cd9048b590bfb8274f9eb0cb2.png'\n    }, {\n      src: 'https://64.media.tumblr.com/a58a2b497ffb0d5d9a555fcfd5359293/b8dde5739efda089-b1/s2048x3072/6346221089420ddae7969d0b7d86ad04b495ff9a.png'\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: '02'\n      },\n      content: 'first comments'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\n\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: '01'\n    },\n    Images: [],\n    Comments: []\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortid.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: '01'\n    },\n    Images: []\n  };\n};\n\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nexport var removePost = function removePost(data) {\n  return {\n    type: REMOVE_POST_REQUEST,\n    data: data\n  };\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = {...state.mainPosts[postIndex]};\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/reducers/post.js"],"names":["shortid","produce","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","generate","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","dummyPost","data","dummyComment","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","type","addComment","removePost","reducer","state","action","draft","unshift","error","post","find","v","postId","filter"],"mappings":"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","sourcesContent":["import shortid from 'shortid';\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n  mainPosts: [{\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: '01',\r\n    },\r\n    content: 'first content #first #content',\r\n    Images: [{\r\n      src: 'https://64.media.tumblr.com/8688f176d0167d668fbc9750ff073824/bc6d6432604e5468-9d/s2048x3072/47d2d8df5f150f6e4cf38a83dc410e298d2490f8.png',\r\n    },\r\n    {\r\n      src: 'https://64.media.tumblr.com/a42d9b563516bb893a8dac4628e62797/6ae9d73862ac638e-12/s2048x3072/063476d81525dbe411150e77944da0b7712bf974.png',\r\n    },\r\n    {\r\n      src: 'https://64.media.tumblr.com/08a193b5577ba6e9a921605b7e698e5d/5baeef4540e82612-c6/s2048x3072/5521390db472cb1cd9048b590bfb8274f9eb0cb2.png',\r\n    },\r\n    {\r\n      src: 'https://64.media.tumblr.com/a58a2b497ffb0d5d9a555fcfd5359293/b8dde5739efda089-b1/s2048x3072/6346221089420ddae7969d0b7d86ad04b495ff9a.png',\r\n    }],\r\n    Comments: [{\r\n      id: shortid.generate(),\r\n      User: {\r\n        id: shortid.generate(),\r\n        nickname: '02',\r\n      },\r\n      content: 'first comments',\r\n    }],\r\n  }],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n};\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: '01',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortid.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: '01',\r\n  },\r\n  Images: [],\r\n});\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST, data,\r\n});\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST, data,\r\n});\r\nexport const removePost = (data) => ({\r\n  type: REMOVE_POST_REQUEST, data,\r\n});\r\n\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      draft.addPostLoading = true;\r\n      draft.addPostDone = false;\r\n      draft.addPostError = null;\r\n      break;\r\n    case ADD_POST_SUCCESS:\r\n      draft.addPostLoading = false;\r\n      draft.addPostDone = true;\r\n      draft.mainPosts.unshift(dummyPost(action.data));\r\n      break;\r\n    case ADD_POST_FAILURE:\r\n      draft.addPostLoading = false;\r\n      draft.addPostError = action.error;\r\n      break;\r\n    case ADD_COMMENT_REQUEST:\r\n      draft.addCommentLoading = true;\r\n      draft.addCommentDone = false;\r\n      draft.addCommentError = null;\r\n      break;\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n      post.Comments.unshift(dummyComment(action.data.content));\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentDone = true;\r\n      // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n      // const post = {...state.mainPosts[postIndex]};\r\n      // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      // const mainPosts = [...state.mainPosts];\r\n      // mainPosts[postIndex] = post;\r\n      // return {\r\n      //   ...state,\r\n      //   mainPosts,\r\n      //   addCommentLoading: false,\r\n      //   addCommentDone: true,\r\n      // };\r\n      break;\r\n    }\r\n    case ADD_COMMENT_FAILURE:\r\n      draft.addCommentLoading = false;\r\n      draft.addCommentError = action.error;\r\n      break;\r\n    case REMOVE_POST_REQUEST:\r\n      draft.removePostLoading = true;\r\n      draft.removePostDone = false;\r\n      draft.removePostError = null;\r\n      break;\r\n    case REMOVE_POST_SUCCESS:\r\n      draft.removePostLoading = false;\r\n      draft.removePostDone = true;\r\n      draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n      break;\r\n    case REMOVE_POST_FAILURE:\r\n      draft.removePostLoading = false;\r\n      draft.removePostError = action.error;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}