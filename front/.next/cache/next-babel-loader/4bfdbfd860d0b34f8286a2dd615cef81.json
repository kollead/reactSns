{"ast":null,"code":"import { all, fork, takeLatest, put, call, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS, LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS, LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS, UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction addPostAPI(data) {\n  return axios.post('/post', data);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}}/comment`, data);\n}\n\nfunction removeCommentAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction unlikePostAPI(data) {\n  return axios.delete(`/post/${data}}/like`);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}}/like`);\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post('/post/images', data);\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPosts), fork(watchLikePost), fork(watchUnlikePost), fork(watchUploadImages), fork(watchRetweet)]);\n}","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/sagas/post.js"],"names":["all","fork","takeLatest","put","call","throttle","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_FAILURE","REMOVE_POST_SUCCESS","LOAD_POSTS_REQUEST","LOAD_POSTS_FAILURE","LOAD_POSTS_SUCCESS","LIKE_POST_REQUEST","LIKE_POST_FAILURE","LIKE_POST_SUCCESS","UNLIKE_POST_REQUEST","UNLIKE_POST_FAILURE","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_SUCCESS","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","addPostAPI","data","post","addCommentAPI","postId","removeCommentAPI","unlikePostAPI","delete","likePostAPI","patch","removePostAPI","uploadImagesAPI","retweetAPI","addPost","action","result","type","id","error","response","addComment","removePost","loadPosts","unlikePost","likePost","uploadImages","retweet","watchAddPost","watchAddComment","watchRemovePost","watchLoadPosts","watchLikePost","watchUnlikePost","watchUploadImages","watchRetweet","postSaga"],"mappings":"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","sourcesContent":["import {all, fork, takeLatest, put, call, throttle } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE,\r\n  REMOVE_POST_REQUEST, REMOVE_POST_FAILURE, REMOVE_POST_SUCCESS,\r\n  LOAD_POSTS_REQUEST, LOAD_POSTS_FAILURE, LOAD_POSTS_SUCCESS,\r\n  LIKE_POST_REQUEST, LIKE_POST_FAILURE, LIKE_POST_SUCCESS,\r\n  UNLIKE_POST_REQUEST, UNLIKE_POST_FAILURE, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_SUCCESS, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_FAILURE} from '../reducers/post';\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME} from '../reducers/user';\r\n\r\nfunction loadPostsAPI(lastId) {\r\n  return axios.get(`/posts?lastId=${lastId || 0}`);\r\n}\r\nfunction addPostAPI(data) {\r\n  return axios.post('/post', data);\r\n}\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/post/${data.postId}}/comment`, data);\r\n}\r\nfunction removeCommentAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\nfunction unlikePostAPI(data) {\r\n  return axios.delete(`/post/${data}}/like`);\r\n}\r\nfunction likePostAPI(data) {\r\n  return axios.patch(`/post/${data}}/like`);\r\n}\r\nfunction removePostAPI(data) {\r\n  return axios.delete(`/post/${data}`);\r\n}\r\nfunction uploadImagesAPI(data) {\r\n  return axios.post('/post/images', data);\r\n}\r\nfunction retweetAPI(data) {\r\n  return axios.post(`/post/${data}/retweet`);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: ADD_POST_TO_ME,\r\n      data: result.data.id,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    const result = yield call(addCommentAPI, action.data);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* removePost(action) {\r\n  try {\r\n    const result = yield call(removePostAPI, action.data);\r\n    yield put({\r\n      type: REMOVE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n    yield put({\r\n      type: REMOVE_POST_OF_ME,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: REMOVE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n  try {\r\n    const result = yield call(loadPostsAPI, action.data);\r\n    yield put({\r\n      type: LOAD_POSTS_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_POSTS_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* unlikePost(action) {\r\n  try {\r\n    const result = yield call(unlikePostAPI, action.data);\r\n    yield put({\r\n      type: UNLIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UNLIKE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* likePost(action) {\r\n  try {\r\n    const result = yield call(likePostAPI, action.data);\r\n    yield put({\r\n      type: LIKE_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LIKE_POST_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* uploadImages(action) {\r\n  try {\r\n    const result = yield call(uploadImagesAPI, action.data);\r\n    yield put({\r\n      type: UPLOAD_IMAGES_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UPLOAD_IMAGES_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* retweet(action) {\r\n  try {\r\n    const result = yield call(retweetAPI, action.data);\r\n    yield put({\r\n      type: RETWEET_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: RETWEET_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nfunction* watchRemovePost() {\r\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\nfunction* watchLoadPosts() {\r\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchLikePost() {\r\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\nfunction* watchUploadImages() {\r\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\r\n}\r\nfunction* watchRetweet() {\r\n  yield takeLatest(RETWEET_REQUEST, retweet);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n    fork(watchRemovePost),\r\n    fork(watchLoadPosts),\r\n    fork(watchLikePost),\r\n    fork(watchUnlikePost),\r\n    fork(watchUploadImages),\r\n    fork(watchRetweet),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}