{"ast":null,"code":"// post/[id].js\nimport React from 'react';\nimport { END } from 'redux-saga';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport Head from 'next/head';\nimport wrapper from '../../store/configureStore';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport AppLayout from '../../component/AppLayout';\nimport PostCard from '../../component/PostCard';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsxs(\"title\", {\n        children: [singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:title\",\n        content: `${singlePost.User.nickname}님의 게시글`\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : 'http://nodebird.com/favicon.ico'\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"og:url\",\n        content: `https://nodebird.com/pot.${id}`\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n};\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: context.params.id\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/post/[id].js"],"names":["React","END","useSelector","useRouter","axios","Head","wrapper","LOAD_MY_INFO_REQUEST","LOAD_POST_REQUEST","AppLayout","PostCard","Post","router","id","query","singlePost","state","post","User","nickname","content","Images","src","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","dispatch","type","data","params","sagaTask","toPromise"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,SAAQC,oBAAR,QAAmC,qBAAnC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAACU,IAAAA;AAAD,MAAOD,MAAM,CAACE,KAApB;AACA,QAAM;AAACC,IAAAA;AAAD,MAAeb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC;AAEA,sBACE,MAAC,SAAD;AAAA,4BACE,MAAC,IAAD;AAAA,8BACE;AAAA,mBACGF,UAAU,CAACG,IAAX,CAAgBC,QADnB;AAAA,QADF,eAKE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEJ,UAAU,CAACK;AAA7C,QALF,eAME;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAG,GAAEL,UAAU,CAACG,IAAX,CAAgBC,QAAS;AAA3D,QANF,eAOE;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,OAAO,EAAEJ,UAAU,CAACK;AAAhD,QAPF,eAQE;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEL,UAAU,CAACM,MAAX,CAAkB,CAAlB,IAAuBN,UAAU,CAACM,MAAX,CAAkB,CAAlB,EAAqBC,GAA5C,GAAkD;AAAjF,QARF,eASE;AAAM,QAAA,IAAI,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAG,4BAA2BT,EAAG;AAA5D,QATF;AAAA,MADF,eAYE,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEE;AAAhB,MAZF;AAAA,IADF;AAgBD,CArBD;;AAuBA,OAAO,MAAMQ,kBAAkB,GAAGjB,OAAO,CAACiB,kBAAR,CAA2B,MAAOC,OAAP,IAAmB;AAC9E,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACArB,EAAAA,KAAK,CAACwB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBrB,IAAAA,KAAK,CAACwB,QAAN,CAAeD,OAAf,CAAuBE,MAAvB,GAAgCJ,MAAhC;AACD;;AACDD,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAEzB;AADe,GAAvB;AAGAiB,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB;AACrBC,IAAAA,IAAI,EAAExB,iBADe;AAErByB,IAAAA,IAAI,EAAET,OAAO,CAACU,MAAR,CAAerB;AAFA,GAAvB;AAIAW,EAAAA,OAAO,CAACM,KAAR,CAAcC,QAAd,CAAuB9B,GAAvB;AACA,QAAMuB,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAfiC,CAA3B;AAiBP,eAAezB,IAAf","sourcesContent":["// post/[id].js\r\nimport React from 'react';\r\nimport { END } from 'redux-saga';\r\nimport { useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/router';\r\nimport axios from 'axios';\r\nimport Head from 'next/head';\r\nimport wrapper from '../../store/configureStore';\r\nimport {LOAD_MY_INFO_REQUEST} from '../../reducers/user';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport AppLayout from '../../component/AppLayout';\r\nimport PostCard from '../../component/PostCard';\r\n\r\nconst Post = () => {\r\n  const router = useRouter();\r\n  const {id} = router.query;\r\n  const {singlePost} = useSelector((state) => state.post);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {singlePost.User.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta name=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n        <meta name=\"og:description\" content={singlePost.content} />\r\n        <meta name=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'http://nodebird.com/favicon.ico'} />\r\n        <meta name=\"og:url\" content={`https://nodebird.com/pot.${id}`} />\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n});\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}