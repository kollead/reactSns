{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irald\\\\Documents\\\\reactSns\\\\front\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport AppLayout from '../component/AppLayout';\nimport PostForm from '../component/PostForm';\nimport PostCard from '../component/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_INFO_REQUEST } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_INFO_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight > 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          console.log('lastId: ', lastId);\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: [user && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this), mainPosts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/pages/index.js"],"names":["React","useEffect","useSelector","useDispatch","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","LOAD_USER_INFO_REQUEST","Home","user","state","mainPosts","hasMorePost","loadPostsLoading","retweetError","post","dispatch","type","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","console","log","addEventListener","removeEventListener","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,kBAAR,QAAiC,kBAAjC;AACA,SAAQC,sBAAR,QAAqC,kBAArC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM;AAACC,IAAAA;AAAD,MAASR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAA1B;AACA,QAAM;AAACE,IAAAA,SAAD;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,gBAAzB;AACJC,IAAAA;AADI,MACYb,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAD7B;AAEA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEV;AAAP,KAAD,CAAR;AACAS,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEX;AAAP,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,YAAJ,EAAkB;AAChBI,MAAAA,KAAK,CAACJ,YAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,YAAD,CAJM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACd,aAASmB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KACGF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAD/C,EACoD;AAClD,YAAIb,WAAW,IAAI,CAACC,gBAApB,EAAsC;AAAA;;AACpC,gBAAMa,MAAM,iBAAGf,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,MAAxB;AACAV,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAEX,kBADC;AAEPoB,YAAAA;AAFO,WAAD,CAAR;AAID;AACF;AACF;;AACDN,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACP,WAAD,EAAcC,gBAAd,CAlBM,CAAT;AAoBA,sBACE,QAAC,SAAD;AAAA,eACGJ,IAAI,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADX,EAEGE,SAAS,CAACsB,GAAV,CAAelB,IAAD,iBAAU,QAAC,QAAD;AAAwB,MAAA,IAAI,EAAEA;AAA9B,OAAeA,IAAI,CAACa,EAApB;AAAA;AAAA;AAAA;AAAA,YAAxB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3CD;;AA4CA,eAAepB,IAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport AppLayout from '../component/AppLayout';\r\nimport PostForm from '../component/PostForm';\r\nimport PostCard from '../component/PostCard';\r\nimport {LOAD_POSTS_REQUEST} from '../reducers/post';\r\nimport {LOAD_USER_INFO_REQUEST} from '../reducers/user';\r\n\r\nconst Home = () => {\r\n  const {user} = useSelector((state) => state.user);\r\n  const {mainPosts, hasMorePost, loadPostsLoading,\r\n    retweetError} = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({type: LOAD_USER_INFO_REQUEST});\r\n    dispatch({type: LOAD_POSTS_REQUEST});\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY + document.documentElement.clientHeight\r\n         === document.documentElement.scrollHeight > 300) {\r\n        if (hasMorePost && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          console.log('lastId: ', lastId);\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [hasMorePost, loadPostsLoading,]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {user && <PostForm />}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}