{"ast":null,"code":"import { all, fork, takeLatest, put, delay, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, FOLLOW_REQUEST, UNFOLLOW_REQUEST, FOLLOW_SUCCESS, UNFOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_FAILURE, LOAD_USER_INFO_REQUEST, LOAD_USER_INFO_SUCCESS, LOAD_USER_INFO_FAILURE } from '../reducers/user';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction logoutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user', {\n    withCredentials: true\n  });\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\n\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\n\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow', data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(loginAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* logOut() {\n  yield call(logoutAPI);\n\n  try {\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_USER_INFO_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* follow(action) {\n  yield delay(1000);\n\n  try {\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* unfollow(action) {\n  yield delay(1000);\n\n  try {\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_INFO_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchLoadUser), fork(watchSignUp), fork(watchFollow), fork(watchUnfollow)]);\n}","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/sagas/user.js"],"names":["all","fork","takeLatest","put","delay","call","axios","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FOLLOW_SUCCESS","UNFOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_FAILURE","LOAD_USER_INFO_REQUEST","LOAD_USER_INFO_SUCCESS","LOAD_USER_INFO_FAILURE","loginAPI","data","post","logoutAPI","loadUserAPI","get","withCredentials","signUpAPI","followAPI","unfollowAPI","logIn","action","result","type","error","response","logOut","loadUser","signUp","console","log","follow","unfollow","watchLogin","watchLogout","watchSignUp","watchFollow","watchUnfollow","watchLoadUser","userSaga"],"mappings":"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","sourcesContent":["import {all, fork, takeLatest, put, delay, call} from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST,\r\n  LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST,\r\n  SIGN_UP_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST,\r\n  FOLLOW_REQUEST, UNFOLLOW_REQUEST, FOLLOW_SUCCESS,\r\n  UNFOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_FAILURE,\r\n  LOAD_USER_INFO_REQUEST, LOAD_USER_INFO_SUCCESS, LOAD_USER_INFO_FAILURE} from '../reducers/user';\r\n\r\nfunction loginAPI(data) {\r\n  return axios.post('/user/login', data);\r\n}\r\nfunction logoutAPI() {\r\n  return axios.post('/user/logout');\r\n}\r\nfunction loadUserAPI() {\r\n  return axios.get('/user', {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction signUpAPI(data) {\r\n  return axios.post('/user', data);\r\n}\r\nfunction followAPI(data) {\r\n  return axios.post('/api/follow', data);\r\n}\r\nfunction unfollowAPI(data) {\r\n  return axios.post('/api/unfollow', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(loginAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* logOut() {\r\n  yield call(logoutAPI);\r\n  try {\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOAD_USER_INFO_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: LOAD_USER_INFO_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* follow(action) {\r\n  yield delay(1000);\r\n  try {\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\nfunction* unfollow(action) {\r\n  yield delay(1000);\r\n  try {\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: error.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_INFO_REQUEST, loadUser);\r\n}\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLogin),\r\n    fork(watchLogout),\r\n    fork(watchLoadUser),\r\n    fork(watchSignUp),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}