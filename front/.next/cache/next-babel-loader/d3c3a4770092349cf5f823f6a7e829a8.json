{"ast":null,"code":"import React, { useCallback } from 'react';\nimport Link from 'next/link';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Card from 'antd/lib/card';\nimport Button from 'antd/lib/button';\nimport Avatar from 'antd/lib/avatar';\nimport { logoutRequestAction } from '../reducers/user';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst UserProfile = () => {\n  const dispatch = useDispatch();\n  const {\n    user,\n    LogOutLoading\n  } = useSelector(state => state.user);\n  const onLogout = useCallback(() => {\n    dispatch(logoutRequestAction());\n  }, []);\n  return /*#__PURE__*/_jsxs(Card, {\n    actions: [/*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: `/user/${user.id}`,\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"Twit\", /*#__PURE__*/_jsx(\"br\", {}), user.Posts.length]\n        })\n      })\n    }, \"twit\"), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"Following\", /*#__PURE__*/_jsx(\"br\", {}), user.Following.length]\n        })\n      })\n    }, \"followings\"), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/profile\",\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"Follower\", /*#__PURE__*/_jsx(\"br\", {}), user.Follower.length]\n        })\n      })\n    }, \"followers\")],\n    children: [/*#__PURE__*/_jsx(Card.Meta, {\n      title: user.nickname,\n      avatar: /*#__PURE__*/_jsx(Link, {\n        href: `/user/${user.id}`,\n        prefetch: false,\n        children: /*#__PURE__*/_jsx(Avatar, {\n          children: user.nickname[0]\n        })\n      })\n    }), /*#__PURE__*/_jsx(Button, {\n      onClick: onLogout,\n      loading: LogOutLoading,\n      children: \"Logout\"\n    })]\n  });\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/Users/irald/Documents/reactSns/front/component/UserProfile.js"],"names":["React","useCallback","Link","useDispatch","useSelector","Card","Button","Avatar","logoutRequestAction","UserProfile","dispatch","user","LogOutLoading","state","onLogout","id","Posts","length","Following","Follower","nickname"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAACQ,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAwBR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACF,IAAlB,CAAzC;AAEA,QAAMG,QAAQ,GAAGb,WAAW,CAC1B,MAAM;AACJS,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACD,GAHyB,EAGvB,EAHuB,CAA5B;AAMA,sBACE,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,cACP;AAAA,6BAAgB,KAAC,IAAD;AAAM,QAAA,IAAI,EAAG,SAAQG,IAAI,CAACI,EAAG,EAA7B;AAAA,+BAAgC;AAAA,0CAAO,cAAP,EAAcJ,IAAI,CAACK,KAAL,CAAWC,MAAzB;AAAA;AAAhC;AAAhB,OAAS,MAAT,CADO,eAEP;AAAA,6BAAsB,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA,+BAAsB;AAAA,+CAAY,cAAZ,EAAmBN,IAAI,CAACO,SAAL,CAAeD,MAAlC;AAAA;AAAtB;AAAtB,OAAS,YAAT,CAFO,eAGP;AAAA,6BAAqB,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,UAAX;AAAA,+BAAsB;AAAA,8CAAW,cAAX,EAAkBN,IAAI,CAACQ,QAAL,CAAcF,MAAhC;AAAA;AAAtB;AAArB,OAAS,WAAT,CAHO,CADX;AAAA,4BAOE,KAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAEN,IAAI,CAACS,QADd;AAEE,MAAA,MAAM,eACJ,KAAC,IAAD;AAAM,QAAA,IAAI,EAAG,SAAQT,IAAI,CAACI,EAAG,EAA7B;AAAgC,QAAA,QAAQ,EAAE,KAA1C;AAAA,+BACE,KAAC,MAAD;AAAA,oBAASJ,IAAI,CAACS,QAAL,CAAc,CAAd;AAAT;AADF;AAHJ,MAPF,eAeE,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,QAAjB;AAA2B,MAAA,OAAO,EAAEF,aAApC;AAAA;AAAA,MAfF;AAAA,IADF;AAmBD,CA7BD;;AA+BA,eAAeH,WAAf","sourcesContent":["import React, {useCallback} from 'react';\r\nimport Link from 'next/link';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Card from 'antd/lib/card';\r\nimport Button from 'antd/lib/button';\r\nimport Avatar from 'antd/lib/avatar';\r\nimport {logoutRequestAction} from '../reducers/user';\r\n\r\nconst UserProfile = () => {\r\n  const dispatch = useDispatch();\r\n  const {user, LogOutLoading} = useSelector((state) => state.user);\r\n\r\n  const onLogout = useCallback(\r\n    () => {\r\n      dispatch(logoutRequestAction());\r\n    }, [],\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      actions={[\r\n        <div key=\"twit\"><Link href={`/user/${user.id}`}><a>Twit<br />{user.Posts.length}</a></Link></div>,\r\n        <div key=\"followings\"><Link href=\"/profile\"><a>Following<br />{user.Following.length}</a></Link></div>,\r\n        <div key=\"followers\"><Link href=\"/profile\"><a>Follower<br />{user.Follower.length}</a></Link></div>,\r\n      ]}\r\n    >\r\n      <Card.Meta\r\n        title={user.nickname}\r\n        avatar={(\r\n          <Link href={`/user/${user.id}`} prefetch={false}>\r\n            <Avatar>{user.nickname[0]}</Avatar>\r\n          </Link>\r\n          )}\r\n      />\r\n      <Button onClick={onLogout} loading={LogOutLoading}>Logout</Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}